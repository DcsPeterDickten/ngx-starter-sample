import { Middleware, GenericStoreEnhancer } from 'redux';
import { NgRedux, DevToolsExtension } from '@angular-redux/store';
import { NgReduxRouter } from '@angular-redux/router';
import { IState, IEnvironment } from '../interfaces';
import { RootReducer } from '../redux/root.reducer';
import { RootEpic } from '../redux/root.epic';
import { StableService } from '../services/stable.service';
/**
 * Base class for an Angular Root Module.
 *
 * This sets up all the basics like redux store, stable tracking, hmr in dev ...
 *
 * @export
 * @abstract
 */
export declare abstract class MainBaseModule {
    private store;
    private devTools;
    private rootReducer;
    private rootEpic;
    private ngReduxRouter;
    private environment;
    private stableService;
    constructor(store: NgRedux<IState>, devTools: DevToolsExtension, rootReducer: RootReducer, rootEpic: RootEpic, ngReduxRouter: NgReduxRouter, environment: IEnvironment, stableService: StableService);
    protected setupStore(appState?: IState): void;
    protected getMiddleware(): Middleware[];
    protected getEnhancers(): GenericStoreEnhancer[];
}
