import { INormalizedCollectionState, INormalizedEntityState, ICrudActionNames } from './interfaces';
/**
 * Generate standardized action names, used mainly for the normalized reducers.
 *
 * For all the CRUD actions all 4 actions (base, start, next, error) are created.
 *
 * @export
 * @param entityName
 * @param [namespace]
 */
export declare function generateCrudActionNames(entityName: string, namespace?: string): ICrudActionNames;
/**
 * Tests if a normalized subState has data that is too old.
 *
 * Given the maxAge, it tests if the data is already loaded and not older than maxAge.
 *
 * @export
 * @param state
 * @param maxAge=0
 */
export declare function subStateStale(state: INormalizedCollectionState | INormalizedEntityState, maxAge?: number): boolean;
/**
 * Tests if a normalized state has a specific model instace
 *
 * @export
 * @param  collectionSubState the given state
 * @param  entitiesName the name of the collection in entities
 * @param  id the id of the model instance to fetch
 * @param  [maxAge] if the collection is older than maxAge, return that there is no fitting model
 * @returns
 */
export declare function hasModel(collectionSubState: INormalizedCollectionState, entitiesName: string, id: string, maxAge?: number): boolean;
