{
  "version": 3,
  "file": "dcs-ngx-utils.umd.js",
  "sources": [
    "ng://@dcs/ngx-utils/out/src/utils/validators.ts",
    "ng://@dcs/ngx-utils/out/src/utils/immutable.ts",
    "ng://@dcs/ngx-utils/out/src/utils/default-error-handler.class.ts",
    "ng://@dcs/ngx-utils/out/src/redux/normalized/selectors.ts",
    "ng://@dcs/ngx-utils/out/src/redux/reselect.ts",
    "ng://@dcs/ngx-utils/out/src/redux/normalized/reducers.ts",
    "ng://@dcs/ngx-utils/out/src/redux/reducers.ts",
    "ng://@dcs/ngx-utils/out/src/random.ts",
    "ng://@dcs/ngx-utils/out/src/ngx-utils.module.ts",
    "ng://@dcs/ngx-utils/out/src/redux/redux.module.ts",
    "ng://@dcs/ngx-utils/out/src/redux/root.epic.ts",
    "ng://@dcs/ngx-utils/out/src/redux/root.reducer.ts",
    "ng://@dcs/ngx-utils/out/src/services/stable.service.ts",
    "ng://@dcs/ngx-utils/out/src/services/rest.service.ts",
    "ng://@dcs/ngx-utils/out/src/translate/app-translate.module.ts",
    "ng://@dcs/ngx-utils/out/src/translate/locale.service.ts",
    "ng://@dcs/ngx-utils/out/src/translate/translate.actions.ts",
    "ng://@dcs/ngx-utils/out/src/tokens.ts",
    "ng://@dcs/ngx-utils/out/src/modules/main-base-module.class.ts",
    "ng://@dcs/ngx-utils/out/src/redux/middleware.ts",
    "ng://@dcs/ngx-utils/out/src/redux/store.ts",
    "ng://@dcs/ngx-utils/out/src/components/presentational-component.ts",
    "ng://@dcs/ngx-utils/out/src/components/container-component.ts",
    "ng://@dcs/ngx-utils/out/src/redux/normalized/utils.ts",
    "ng://@dcs/ngx-utils/node_modules/tslib/tslib.es6.js"
  ],
  "sourcesContent": [
    "import { FormControl } from '@angular/forms';\nimport { isInt, isFQDN, isMobilePhone, isEmail } from 'validator';\nimport { parse, isValid } from 'date-fns';\n\nexport function validateEmail(c: FormControl) {\n  return isEmail(String(c.value)) ? null : { validateEmail: { valid: false } };\n}\n\nexport function validatePhone(c: FormControl) {\n  return isMobilePhone(String(c.value), 'de-DE')\n    ? null\n    : { validatePhone: { valid: false } };\n}\n\nexport function validateFQDN(c: FormControl) {\n  return isFQDN(String(c.value)) ? null : { validateFQDN: { valid: false } };\n}\n\nexport function validatePositiveInteger(c: FormControl) {\n  const value: string = String(c.value);\n  return isInt(value, { min: 1 })\n    ? null\n    : { validatePositiveInteger: { valid: false } };\n}\n\nexport function validateDate(c: FormControl) {\n  const value: Date = parse(c.value, 'YYYY-MM-DD', 0);\n  return isValid(value) ? null : { validateDate: { valid: false } };\n}\n\nexport function validateTime(c: FormControl) {\n  const value: Date = parse(c.value, 'HH:mm', 0);\n  return isValid(value) ? null : { validateTime: { valid: false } };\n}\n",
    "import { List, fromJS } from 'immutable';\nimport { Constructor } from '../interfaces';\n\nexport function EmbeddedRecord(recordClass: any) {\n  return function(target: any, key: string): any {\n    const cache = new WeakMap();\n\n    return {\n      get() {\n        if (!cache.has(this)) {\n          cache.set(this, new recordClass(this.get(key)));\n        }\n        return cache.get(this);\n      }\n    };\n  };\n}\n\nexport function EmbeddedCollection(\n  recordClass: any,\n  collectionFactory: any = List\n) {\n  return function(target: any, key: string): any {\n    const cache = new WeakMap();\n\n    return {\n      get() {\n        if (!cache.has(this)) {\n          const collection = this.get(key) || collectionFactory();\n          cache.set(\n            this,\n            collectionFactory(\n              collection.map((data: any) => new recordClass(data))\n            )\n          );\n        }\n        return cache.get(this);\n      }\n    };\n  };\n}\n\nexport function ExtendedRecord<TBase extends Constructor<{}>>(Base: TBase) {\n  type Params = Partial<TBase>;\n\n  return class extends Base {\n    public merge: any;\n\n    constructor(...args: any[]) {\n      const params: Params = fromJS(args.shift());\n      super(params, ...args);\n    }\n\n    public with(params: Params) {\n      return this.merge(fromJS(params)) as this;\n    }\n  };\n}\n",
    "import { ErrorHandler } from '@angular/core';\n\nexport class DefaultErrorHandler implements ErrorHandler {\n  public handleError(error: Error) {\n    // clean up potential broken persisted state if an error bubbles up to the global handler\n    localStorage.clear();\n    throw error;\n  }\n}\n",
    "import { denormalize, Schema } from 'normalizr';\nimport { Selector } from 'reselect';\nimport { List, Map, Record } from 'immutable';\n\nimport { Constructor, IState } from '../../interfaces';\nimport {\n  INormalizedCollectionSelectors,\n  INormalizedCollectionState,\n  INormalizedEntityState,\n  INormalizedEntitySelectors,\n} from './interfaces';\nimport { createSelector } from '../reselect';\n\n/**\n * Creates selectors for a reducer based on a [[INormalizedEntityState]].\n *\n * Provides base selectors for all attributes and also for building a [[Record]] instance out of the raw data\n *\n * @export\n * @param  entityName\n * @param  entityClass The [[Record.Class]] class to build the model from\n * @param  schema The same schema that was used no normalize the data in the first place\n * @param ]\n * @returns\n */\nexport function normalizedEntitySelectorFactory<T extends Record<any>>(\n  entityName: string,\n  entityClass: Constructor<T>,\n  schema: Schema,\n  customSelectors: { [key: string]: Selector<IState, any> } = {}\n): INormalizedEntitySelectors<T> {\n  const baseSelector = (state: IState): INormalizedEntityState =>\n    state.get(entityName);\n  const idSelector = (state: IState): string =>\n    baseSelector(state).get('result');\n  const entitiesSelector = (state: IState): Map<string, Map<string, any>> =>\n    baseSelector(state).get('entities');\n\n  const modelSelector = createSelector(\n    [idSelector, entitiesSelector],\n    (id: string, entities: Map<string, Map<string, Map<string, any>>>) => {\n      if (id) {\n        const denormalizedData = denormalize(id, schema, entities);\n        return new entityClass(denormalizedData);\n      } else {\n        return new entityClass();\n      }\n    }\n  );\n\n  return Object.assign(\n    {},\n    {\n      subStateSelector: baseSelector,\n      loadingSelector: (state: IState): boolean =>\n        baseSelector(state).get('loading'),\n      loadedSelector: (state: IState): boolean =>\n        baseSelector(state).get('loaded'),\n      updatingSelector: (state: IState): boolean =>\n        baseSelector(state).get('updating'),\n      updatedAtSelector: (state: IState): number =>\n        baseSelector(state).get('updatedAt'),\n      idSelector,\n      modelSelector,\n    },\n    customSelectors\n  );\n}\n\n/**\n * Creates selectors for a reducer based on a [[INormalizedCollectionState]].\n *\n * Provides base selectors for all attributes and also for building a collection of [[Record]] instances out of the raw data\n *\n * @export\n * @param  entityName\n * @param  entityClass The [[Record.Class]] class to build the models from\n * @param  schema The same schema that was used no normalize the data in the first place\n * @param ]\n * @returns\n */\nexport function normalizedCollectionSelectorsFactory<T extends Record<any>>(\n  entityName: string,\n  entityClass: Constructor<T>,\n  schema: Schema,\n  customSelectors: { [key: string]: Selector<IState, any> } = {}\n): INormalizedCollectionSelectors<T> {\n  const baseSelector = (state: IState): INormalizedCollectionState =>\n    state.get(entityName);\n  const idsSelector = (state: IState): List<string> =>\n    baseSelector(state).get('result');\n  const entitiesSelector = (state: IState): Map<string, Map<string, any>> =>\n    baseSelector(state).get('entities');\n\n  const modelsSelector = createSelector(\n    [idsSelector, entitiesSelector],\n    (\n      ids: List<string>,\n      entities: Map<string, Map<string, Map<string, any>>>\n    ) => {\n      const denormalizedData = denormalize(ids, schema, entities);\n      return denormalizedData.map(\n        (item: Map<string, any>) => new entityClass(item)\n      );\n    }\n  );\n\n  const modelsMapSelector = createSelector([modelsSelector], models => {\n    return models.reduce((acc: Map<string, T>, item: T) => {\n      return acc.set(String(item.get('id', null)), item);\n    }, Map());\n  });\n\n  return Object.assign(\n    {},\n    {\n      subStateSelector: baseSelector,\n      loadingSelector: (state: IState): boolean =>\n        baseSelector(state).get('loading'),\n      loadedSelector: (state: IState): boolean =>\n        baseSelector(state).get('loaded'),\n      updatingSelector: (state: IState): boolean =>\n        baseSelector(state).get('updating'),\n      updatedAtSelector: (state: IState): number =>\n        baseSelector(state).get('updatedAt'),\n      idsSelector,\n      modelsSelector,\n      modelsMapSelector,\n    },\n    customSelectors\n  );\n}\n",
    "import { createSelectorCreator, defaultMemoize, createSelector as cs } from 'reselect';\nimport { is } from 'immutable';\n\n/**\n * Small wrapper around reselect [[createSelector]], that knows how to compare ImmutableJS data structures.\n */\nexport const createSelector: typeof cs = createSelectorCreator(defaultMemoize, is);\n",
    "import { fromJS, Map } from 'immutable';\n\nimport { mergeState, createImmutableState } from '../reducers';\nimport { IAction, ISubStateReducer } from '../../interfaces';\nimport {\n  INormalizedCollectionState,\n  INormalizedCollectionAction,\n  INormalizedEntityAction,\n  INormalizedEntityState,\n} from './interfaces';\nimport { generateCrudActionNames } from './utils';\n\nexport function createNormalizedEntityState(): INormalizedEntityState {\n  return createImmutableState({\n    result: '',\n    entities: Map() as any,\n    loading: false,\n    loaded: false,\n    updating: false,\n    updatedAt: 0,\n    error: null,\n  });\n}\n\n/**\n * This creates a reducer with full CRUD functionality for a single entity.\n *\n * Requirement: Data received from API is normalized, see https://github.com/paularmstrong/normalizr\n *\n * @export\n * @param  entityName\n * @param  [namespace]\n * @param [customReducers]\n * @returns\n */\nexport function normalizedEntityReducerFactory(\n  entityName: string,\n  namespace?: string,\n  customReducers?: {\n    [key: string]: (\n      state: INormalizedEntityState,\n      action: IAction\n    ) => INormalizedEntityState;\n  }\n): ISubStateReducer<INormalizedEntityState> {\n  const initialState: INormalizedEntityState = createNormalizedEntityState();\n\n  return function(\n    state: INormalizedEntityState = initialState,\n    action: IAction\n  ): INormalizedEntityState {\n    const actionNames = generateCrudActionNames(entityName, namespace);\n\n    const defaultReducers = {\n      [actionNames.readOneStart]: (s: INormalizedEntityState, a: IAction) => {\n        return mergeState(initialState, { loading: true });\n      },\n      [actionNames.readOneNext]: (\n        s: INormalizedEntityState,\n        a: INormalizedEntityAction\n      ) => {\n        return mergeState(s, {\n          loading: false,\n          loaded: true,\n          updatedAt: Date.now(),\n          entities: fromJS(a.payload.entities),\n          result: a.payload.result,\n        });\n      },\n      [actionNames.readOneError]: (s: INormalizedEntityState, a: IAction) => {\n        return mergeState(initialState, {\n          error: a.payload,\n        });\n      },\n      [actionNames.createStart]: (s: INormalizedEntityState, a: IAction) => {\n        return mergeState(s, { updating: true, error: null });\n      },\n      [actionNames.createNext]: (\n        s: INormalizedEntityState,\n        a: INormalizedEntityAction\n      ) => {\n        return mergeState(s, {\n          updating: false,\n          loaded: true,\n          updatedAt: Date.now(),\n          entities: fromJS(a.payload.entities),\n          result: a.payload.result,\n        });\n      },\n      [actionNames.createError]: (s: INormalizedEntityState, a: IAction) => {\n        return mergeState(initialState, { updating: false, error: a.payload });\n      },\n      [actionNames.updateStart]: (s: INormalizedEntityState, a: IAction) => {\n        return mergeState(s, { updating: true, error: null });\n      },\n      [actionNames.updateNext]: (\n        s: INormalizedEntityState,\n        a: INormalizedEntityAction\n      ) => {\n        return mergeState(s, {\n          updating: false,\n          loaded: true,\n          updatedAt: Date.now(),\n          entities: fromJS(a.payload.entities),\n          result: a.payload.result,\n        });\n      },\n      [actionNames.updateError]: (s: INormalizedEntityState, a: IAction) => {\n        return mergeState(s, { updating: false, error: a.payload });\n      },\n      [actionNames.deleteStart]: (s: INormalizedEntityState, a: IAction) => {\n        return mergeState(s, { updating: true, error: null });\n      },\n      [actionNames.deleteNext]: (s: INormalizedEntityState, a: IAction) => {\n        return initialState;\n      },\n      [actionNames.deleteError]: (s: INormalizedEntityState, a: IAction) => {\n        return mergeState(s, { updating: false, error: a.payload });\n      },\n      [actionNames.setCurrent]: (\n        s: INormalizedEntityState,\n        a: INormalizedEntityAction\n      ) => {\n        return mergeState(initialState, {\n          loaded: true,\n          entities: fromJS(a.payload.entities),\n          result: a.payload.result,\n        });\n      },\n      [actionNames.reset]: (s: INormalizedEntityState, a: IAction) => {\n        return initialState;\n      },\n      [actionNames.resetError]: (s: INormalizedEntityState, a: IAction) => {\n        return s.set('error', null);\n      },\n    };\n\n    const reducers = Object.assign({}, defaultReducers, customReducers);\n\n    if (reducers[action.type]) {\n      return reducers[action.type](state, action);\n    }\n\n    return state;\n  };\n}\n\nexport function createNormalizedCollectionState(): INormalizedCollectionState {\n  return createImmutableState({\n    result: [] as any,\n    entities: {} as any,\n    loading: false,\n    loaded: false,\n    updating: false,\n    updatedAt: 0,\n    error: null,\n  });\n}\n\n/**\n * This creates a reducer with full CRUD functionality for a collection of entities.\n *\n * Requirement: Data received from API is normalized, see https://github.com/paularmstrong/normalizr\n *\n * @export\n * @param  entityName\n * @param  [namespace]\n * @param [customReducers]\n * @returns\n */\nexport function normalizedCollectionReducerFactory(\n  entityName: string,\n  namespace?: string,\n  customReducers?: {\n    [key: string]: (\n      state: INormalizedCollectionState,\n      action: IAction\n    ) => INormalizedCollectionState;\n  }\n): ISubStateReducer<INormalizedCollectionState> {\n  const initialState: INormalizedCollectionState = createNormalizedCollectionState();\n\n  return function(\n    state: INormalizedCollectionState = initialState,\n    action: IAction\n  ): INormalizedCollectionState {\n    const actionNames = generateCrudActionNames(entityName, namespace);\n\n    const defaultReducers = {\n      [actionNames.readStart]: (s: INormalizedCollectionState, a: IAction) => {\n        return mergeState(initialState, { loading: true });\n      },\n      [actionNames.readNext]: (\n        s: INormalizedCollectionState,\n        a: INormalizedCollectionAction\n      ) => {\n        return mergeState(s, {\n          loading: false,\n          loaded: true,\n          updatedAt: Date.now(),\n          entities: fromJS(action.payload.entities),\n          result: action.payload.result,\n        });\n      },\n      [actionNames.readError]: (s: INormalizedCollectionState, a: IAction) => {\n        return mergeState(initialState, { error: a.payload });\n      },\n      [actionNames.createStart]: (\n        s: INormalizedCollectionState,\n        a: IAction\n      ) => {\n        return mergeState(s, { updating: true, error: null });\n      },\n      [actionNames.createNext]: (\n        s: INormalizedCollectionState,\n        a: INormalizedEntityAction\n      ) => {\n        return mergeState(s, {\n          updating: false,\n          entities: s.get('entities').mergeDeep(fromJS(a.payload.entities)),\n          result: s.get('result').push(a.payload.result),\n        });\n      },\n      [actionNames.createError]: (\n        s: INormalizedCollectionState,\n        a: IAction\n      ) => {\n        return mergeState(s, {\n          updating: false,\n          error: a.payload,\n        });\n      },\n      [actionNames.updateStart]: (\n        s: INormalizedCollectionState,\n        a: IAction\n      ) => {\n        return mergeState(s, { updating: true, error: null });\n      },\n      [actionNames.updateNext]: (\n        s: INormalizedCollectionState,\n        a: INormalizedEntityAction\n      ) => {\n        return mergeState(s, {\n          updating: false,\n          entities: s.get('entities').mergeDeep(fromJS(a.payload.entities)),\n        });\n      },\n      [actionNames.updateError]: (\n        s: INormalizedCollectionState,\n        a: IAction\n      ) => {\n        return mergeState(s, {\n          updating: false,\n          error: a.payload,\n        });\n      },\n      [actionNames.deleteStart]: (\n        s: INormalizedCollectionState,\n        a: IAction\n      ) => {\n        return mergeState(s, { updating: true, error: null });\n      },\n      [actionNames.deleteNext]: (\n        s: INormalizedCollectionState,\n        a: INormalizedEntityAction\n      ) => {\n        return mergeState(s, {\n          updating: false,\n          entities: s.get('entities').deleteIn([entityName, a.payload.result]),\n          result: s\n            .get('result')\n            .update(ids => ids.filterNot(id => id === a.payload.result)),\n        });\n      },\n      [actionNames.deleteError]: (\n        s: INormalizedCollectionState,\n        a: IAction\n      ) => {\n        return mergeState(s, {\n          updating: false,\n          error: a.payload,\n        });\n      },\n      [actionNames.reset]: (s: INormalizedCollectionState, a: IAction) => {\n        return initialState;\n      },\n      [actionNames.resetError]: (s: INormalizedCollectionState, a: IAction) => {\n        return s.set('error', null);\n      },\n    };\n\n    const reducers = Object.assign({}, defaultReducers, customReducers);\n\n    if (reducers[action.type]) {\n      return reducers[action.type](state, action);\n    }\n\n    return state;\n  };\n}\n",
    "import { fromJS, Map } from 'immutable';\n\nexport interface ImmutableState<T> extends Map<string, any> {\n  get<K extends keyof T>(name: K): T[K];\n  OrderedSet<K extends keyof T>(name: K, value: T[K]): this;\n  merge<O extends Partial<{ [K in keyof T]: T[K] }>>(diff: O): this;\n}\n\n/**\n * Small wrapper around Immutable.fromJS, that sets correct typings.\n *\n * Using this method we can create a [[Map]] that will typecheck keys\n * and forbids adding new keys.\n */\nexport function createImmutableState<T extends object>(o: T) {\n  return fromJS(o) as ImmutableState<T>;\n}\n\n/**\n * Returns the merge result of the given state and the diff, while ensuring diff is an immutable before merge.\n *\n * @param state\n * @param diff\n */\nexport function mergeState<T, D extends { [K in keyof T]: T[K] }>(\n  state: ImmutableState<T>,\n  diff: Partial<D>\n): ImmutableState<T> {\n  return state.merge(fromJS(diff));\n}\n",
    "export function random(): number {\n  return 42;\n}\n",
    "import { NgModule } from '@angular/core';\nimport { AppTranslateModule } from './translate/app-translate.module';\nimport { StableService } from './services/stable.service';\nimport { RestService } from './services/rest.service';\nimport { ReduxModule } from './redux/redux.module';\n\n@NgModule({\n  imports: [AppTranslateModule, ReduxModule],\n  exports: [AppTranslateModule, ReduxModule],\n  providers: [StableService, RestService]\n})\nexport class NgxUtilsModule {}\n",
    "import { NgModule } from '@angular/core';\nimport { routerReducer } from '@angular-redux/router';\n\nimport { RootReducer } from './root.reducer';\nimport { RootEpic, dummyEpic } from './root.epic';\nimport { APP_EPICS, APP_REDUCERS } from '../tokens';\n\n@NgModule({\n  providers: [\n    RootReducer,\n    RootEpic,\n    {\n      multi: true,\n      provide: APP_REDUCERS,\n      useValue: { name: 'router', reducer: routerReducer },\n    },\n    { provide: APP_EPICS, useValue: dummyEpic, multi: true },\n  ],\n})\nexport class ReduxModule {}\n",
    "import { Injectable, Inject } from '@angular/core';\nimport {\n  combineEpics,\n  ActionsObservable,\n  createEpicMiddleware,\n  EpicMiddleware,\n} from 'redux-observable';\nimport { Observable } from 'rxjs/Observable';\nimport 'rxjs/add/operator/mergeMap';\nimport 'rxjs/add/observable/empty';\n\nimport { IAction, IState, IAppEpic, IEpic, IEpicClass } from '../interfaces';\nimport { APP_EPICS } from '../tokens';\n\n// create one noop epic to fill provider with at least one value\n// for epics docs see https://redux-observable.js.org/\nexport function dummyEpic(action$: ActionsObservable<IAction>) {\n  return action$.mergeMap(() => {\n    return Observable.empty();\n  });\n}\n\n/**\n * Wrapper class to activate all injected [[Epic]] instances and forward them to the redux-observable middleware.\n *\n * @export\n */\n@Injectable()\nexport class RootEpic {\n  public middleware: EpicMiddleware<IAction, IState>;\n\n  constructor(@Inject(APP_EPICS) private epicConfigs: IAppEpic[]) {\n    const epics = this.buildEpics(epicConfigs);\n    this.middleware = createEpicMiddleware(combineEpics(...epics));\n  }\n\n  /**\n   * Returns the Root Epic given to the middleware\n   *\n   * @returns\n   * @memberof RootEpic\n   */\n  public epic(): IAppEpic {\n    return combineEpics(...this.epicConfigs);\n  }\n\n  /**\n   * This method collects the [[Epic]] functions from the injected APP_EPICS and extracts the function\n   * from [[IEpicClass]] if given.\n   *\n   * @protected\n   * @param  epicConfigs\n   * @returns\n   * @memberof RootEpic\n   */\n  protected buildEpics(epicConfigs: IAppEpic[]): IEpic[] {\n    return epicConfigs.map(config => {\n      if ((<IEpicClass>config).epic) {\n        return (<IEpicClass>config).epic();\n      } else {\n        return config as IEpic;\n      }\n    });\n  }\n}\n",
    "import { Injectable, Inject } from '@angular/core';\nimport { combineReducers } from 'redux-immutable';\nimport { enableBatching } from 'redux-batched-actions';\n\nimport { IReducer, IReducerConfig, IReducerClass } from '../interfaces';\nimport { APP_REDUCERS } from '../tokens';\n\n/**\n * Class that builds the root reducer for redux from all injected [[APP_REDUCERS]].\n *\n * @export\n */\n@Injectable()\nexport class RootReducer {\n  private currentReducers: any = {};\n\n  constructor(@Inject(APP_REDUCERS) private reducerConfigs: IReducerConfig[]) {}\n\n  /**\n   *\n   *\n   * @param  [newReducerConfigs]\n   * @returns\n   * @memberof RootReducer\n   */\n  public reducer(newReducerConfigs?: IReducerConfig[]): IReducer {\n    return enableBatching(\n      combineReducers(this.buildReducers(newReducerConfigs))\n    ) as IReducer;\n  }\n\n  /**\n   * Builds the root reducer.\n   *\n   * @param  [newReducerConfigs]\n   * @returns\n   * @memberof RootReducer\n   */\n  public buildReducers(newReducerConfigs?: IReducerConfig[]) {\n    const currentReducers = Object.assign({}, this.currentReducers);\n    const reducerConfigs: IReducerConfig[] = newReducerConfigs\n      ? newReducerConfigs\n      : this.reducerConfigs;\n\n    this.currentReducers = reducerConfigs.reduce((r, config) => {\n      if (typeof (config.reducer as IReducerClass).reducer === 'function') {\n        r[config.name] = (config.reducer as IReducerClass).reducer();\n      } else {\n        r[config.name] = config.reducer;\n      }\n\n      return r;\n    }, currentReducers);\n\n    return this.currentReducers;\n  }\n}\n",
    "import { Injectable } from '@angular/core';\nimport { NgRedux } from '@angular-redux/store';\nimport { Observable } from 'rxjs/Observable';\nimport { BehaviorSubject } from 'rxjs/BehaviorSubject';\nimport 'rxjs/add/operator/distinctUntilChanged';\n\nimport { RestService } from './rest.service';\nimport { IState } from '../interfaces';\n\n/**\n * Angular Service to inform the application wether the state is currently stable.\n *\n * Stable is defined currently by not having any open HTTP requests and no store updates.\n */\n@Injectable()\nexport class StableService {\n  /**\n   * Subscribe to this [[Observable]] to receive stable/unstable events.\n   *\n   * @memberof StableService\n   */\n  public storeStable$: Observable<boolean>;\n  private onStoreStable$: BehaviorSubject<boolean> = new BehaviorSubject(false);\n\n  constructor(private http: RestService, private store: NgRedux<IState>) {\n    this.storeStable$ = this.onStoreStable$.distinctUntilChanged();\n  }\n\n  public init() {\n    this.store.subscribe(() => {\n      window.storeStable = false;\n      this.onStoreStable$.next(false);\n\n      if (this.http.activeRequests === 0) {\n        window.storeStable = true;\n        this.onStoreStable$.next(true);\n      }\n    });\n  }\n}\n",
    "import { Injectable, Inject } from '@angular/core';\nimport { HttpClient, HttpErrorResponse } from '@angular/common/http';\nimport { Schema, normalize } from 'normalizr';\n// @ts-ignore\nimport Ajv from 'ajv';\nimport { Observable } from 'rxjs/Observable';\nimport 'rxjs/add/operator/catch';\nimport 'rxjs/add/operator/map';\nimport 'rxjs/add/operator/share';\n\nimport { IEnvironment } from '../interfaces';\nimport { APP_ENVIRONMENT } from '../tokens';\n\n/**\n * Wrapper class around Angular [[Http]].\n *\n * Adds features like schema validation, normalizing data, base API URL,\n * tracking the number of active requests ...\n *\n * @export\n */\n@Injectable()\nexport class RestService {\n  // tslint:disable-next-line:variable-name\n  protected _activeRequests: number = 0;\n\n  get activeRequests(): number {\n    return this._activeRequests;\n  }\n\n  set activeRequests(num: number) {\n    this._activeRequests = num;\n  }\n\n  constructor(\n    protected http: HttpClient,\n    @Inject(APP_ENVIRONMENT) protected environment: IEnvironment\n  ) {}\n\n  /**\n   * HTTP GET\n   *\n   * @param  path\n   * @param [options]\n   * @param  [schema]\n   * @param  [jsonSchemaValidator]\n   * @returns\n   * @memberof RestService\n   */\n  public get(\n    path: string,\n    options: any = {},\n    schema?: Schema,\n    jsonSchemaValidator?: Ajv.ValidateFunction\n  ): Observable<any> {\n    return this.request('get', path, options, schema, jsonSchemaValidator);\n  }\n\n  /**\n   * HTTP POST\n   *\n   * @param  path\n   * @param  body\n   * @param [options]\n   * @param [schema]\n   * @param [jsonSchemaValidator]\n   * @returns\n   * @memberof RestService\n   */\n  public post(\n    path: string,\n    body: any,\n    options: any = {},\n    schema?: Schema,\n    jsonSchemaValidator?: Ajv.ValidateFunction\n  ): Observable<any> {\n    options = { ...options, body };\n    return this.request('post', path, options, schema, jsonSchemaValidator);\n  }\n\n  /**\n   * HTTP PUT\n   *\n   * @param  path\n   * @param  body\n   * @param [options]\n   * @param  [schema]\n   * @param  [jsonSchemaValidator]\n   * @returns\n   * @memberof RestService\n   */\n  public put(\n    path: string,\n    body: any,\n    options: any = {},\n    schema?: Schema,\n    jsonSchemaValidator?: Ajv.ValidateFunction\n  ): Observable<any> {\n    options = { ...options, body };\n    return this.request('put', path, options, schema, jsonSchemaValidator);\n  }\n\n  /**\n   * HTTP DELETE\n   *\n   * @param  path\n   * @param [options]\n   * @param  [schema]\n   * @param  [jsonSchemaValidator]\n   * @returns\n   * @memberof RestService\n   */\n  public delete(\n    path: string,\n    options: any = {},\n    schema?: Schema,\n    jsonSchemaValidator?: Ajv.ValidateFunction\n  ): Observable<any> {\n    return this.request('delete', path, options, schema, jsonSchemaValidator);\n  }\n\n  /**\n   * Base method called by the other get/post... methods\n   *\n   * @protected\n   * @param  path\n   * @param  requestOptions\n   * @param  [schema]\n   * @param  [jsonSchemaValidator]\n   * @returns\n   * @memberof RestService\n   */\n  protected request(\n    type: string,\n    path: string,\n    requestOptions: any,\n    schema?: Schema,\n    jsonSchemaValidator?: Ajv.ValidateFunction\n  ): Observable<any> {\n    const url: string = this.getUrl(path);\n    requestOptions = this.buildRequestOptions(requestOptions);\n    this.activeRequests++;\n\n    return this.http\n      .request(type, url, requestOptions)\n      .map((data: any) => {\n        if (jsonSchemaValidator) {\n          const valid = jsonSchemaValidator(data);\n          if (!valid) {\n            this.logSchemaErrors(\n              jsonSchemaValidator.errors,\n              data,\n              path,\n              requestOptions\n            );\n            if (this.environment.throwOnSchemaError) {\n              throw new Error('Schema validation failed');\n            }\n          }\n        }\n        return data;\n      })\n      .map((data: any) => this.normalizePayload(data, schema))\n      .map((data: any) => {\n        this.activeRequests--;\n        return data;\n      })\n      .catch((error: HttpErrorResponse) => {\n        this.activeRequests--;\n        throw error;\n      })\n      .share();\n  }\n\n  protected logSchemaErrors(\n    errors: Ajv.ErrorObject[] | null | undefined,\n    responseData: any,\n    path: string,\n    requestOptions: any\n  ): void {\n    if (errors && errors.length) {\n      const css =\n        'color: red; background-color: #ffe6e6; border: 1px solid #ff9999; padding: 1px 10px';\n      console.group('%cSchema validation failed', css);\n      console.log('Request:', path, requestOptions);\n      console.log('Response Data:', responseData);\n      console.group('%cErrors:', css);\n      errors.forEach(error => {\n        console.log(error);\n      });\n      console.groupEnd();\n      console.groupEnd();\n    }\n  }\n\n  protected getUrl(path: string): string {\n    let url: string;\n    if (path.startsWith('http') || path.startsWith('//')) {\n      url = path;\n    } else {\n      url = `${this.environment.apiUrl}/${path}`;\n    }\n\n    return url;\n  }\n\n  /**\n   * If a normalizr schema is given, it returns the normlaized date, the original data otherwise.\n   *\n   * @param  data\n   * @param  [schema]\n   * @returns either normalized or the given data.\n   */\n  protected normalizePayload(data: any, schema?: Schema) {\n    if (schema) {\n      return normalize(data, schema);\n    }\n\n    return data;\n  }\n\n  /**\n   * Extracts the JSON from an Angular [[Response]]\n   *\n   * @param  response\n   * @returns Whatever the HTTP call returned as JSON\n   */\n  protected extractResponseData(response: Response): any {\n    let payload: any;\n\n    try {\n      payload = response.json();\n    } catch (e) {\n      payload = {};\n    }\n\n    return payload;\n  }\n\n  /**\n   * Hook to do some processing of the given options\n   *\n   * Used mainly to add headers (like auth) or other default options to all requests.\n   * Just returns the given options as default\n   *\n   * @param options\n   */\n  protected buildRequestOptions(options: any): any {\n    return options;\n  }\n}\n",
    "import { NgModule, Inject, LOCALE_ID } from '@angular/core';\nimport { TranslateService, TranslateModule } from '@ngx-translate/core';\n\nimport { APP_TRANSLATIONS } from '../tokens';\nimport { TranslateActions } from './translate.actions';\nimport { LocaleService } from './locale.service';\n\n@NgModule({\n  exports: [TranslateModule],\n  imports: [TranslateModule.forRoot()],\n  providers: [\n    TranslateActions,\n    LocaleService,\n    { provide: APP_TRANSLATIONS, useValue: { name: 'en', translations: {} }, multi: true }\n  ]\n})\nexport class AppTranslateModule {\n  constructor(\n    private translate: TranslateService,\n    @Inject(LOCALE_ID) private appLocale: string,\n    @Inject(APP_TRANSLATIONS) private translations: Array<{ name: string; translations: any }>\n  ) {\n    this.setupTranslations();\n  }\n\n  public setupTranslations() {\n    this.translations.forEach((translation: { name: string; translations: any }) => {\n      this.translate.setTranslation(translation.name, translation.translations, true);\n    });\n\n    this.translate.setDefaultLang(this.appLocale);\n    this.translate.use(this.appLocale);\n  }\n}\n",
    "import { Injectable } from '@angular/core';\nimport { TranslateService, LangChangeEvent } from '@ngx-translate/core';\n\nimport { TranslateActions } from './translate.actions';\n\n@Injectable()\nexport class LocaleService {\n  constructor(\n    private translateActions: TranslateActions,\n    private translateService: TranslateService\n  ) {}\n\n  public setup() {\n    this.translateService.onLangChange.subscribe((event: LangChangeEvent) => {\n      this.translateActions.setLocale(event.lang);\n    });\n  }\n}\n",
    "import { Injectable } from '@angular/core';\nimport { dispatch } from '@angular-redux/store';\n\nimport { IAction } from '../interfaces';\n\nexport const TRANSLATE_SET_LOCALE: string = 'TRANSLATE_SET_LOCALE';\n\n@Injectable()\nexport class TranslateActions {\n  @dispatch()\n  public setLocale(locale: string): IAction {\n    return {\n      type: TRANSLATE_SET_LOCALE,\n      payload: locale\n    };\n  }\n}\n",
    "import { InjectionToken } from '@angular/core';\nimport {\n  IEnvironment,\n  IReducerConfig,\n  IErrorFormatterConfig,\n  ITranslationConfig,\n  IAppEpic,\n} from './interfaces';\n\nexport const APP_REDUCERS: InjectionToken<IReducerConfig> = new InjectionToken(\n  'APP_REDUCERS'\n);\nexport const APP_EPICS: InjectionToken<IAppEpic> = new InjectionToken(\n  'APP_EPICS'\n);\n\nexport const APP_ERROR_FORMATTERS: InjectionToken<\n  IErrorFormatterConfig\n> = new InjectionToken('APP_ERROR_FORMATTERS');\n\nexport const APP_TRANSLATIONS: InjectionToken<\n  ITranslationConfig\n> = new InjectionToken('APP_TRANSLATIONS');\n\nexport const APP_ENVIRONMENT: InjectionToken<IEnvironment> = new InjectionToken(\n  'APP_ENVIRONMENT'\n);\n",
    "import { Middleware, GenericStoreEnhancer } from 'redux';\nimport { NgRedux, DevToolsExtension } from '@angular-redux/store';\nimport { NgReduxRouter } from '@angular-redux/router';\nimport { Map, fromJS } from 'immutable';\n\nimport { IState, IEnvironment } from '../interfaces';\nimport { RootReducer } from '../redux/root.reducer';\nimport { RootEpic } from '../redux/root.epic';\nimport { StableService } from '../services/stable.service';\nimport { createReduxStore, routerStateSelector } from '../redux/store';\nimport {\n  observableMiddleware,\n  removeEmptyActionsMiddleware,\n} from '../redux/middleware';\n\n/**\n * Base class for an Angular Root Module.\n *\n * This sets up all the basics like redux store, stable tracking, hmr in dev ...\n *\n * @export\n * @abstract\n */\nexport abstract class MainBaseModule {\n  constructor(\n    private store: NgRedux<IState>,\n    private devTools: DevToolsExtension,\n    private rootReducer: RootReducer,\n    private rootEpic: RootEpic,\n    private ngReduxRouter: NgReduxRouter,\n    private environment: IEnvironment,\n    private stableService: StableService\n  ) {\n    let appState: IState | undefined;\n\n    // @ts-ignore\n    if (module.hot && window.hmrData) {\n      // @ts-ignore\n      appState = window.hmrData.appState;\n      // @ts-ignore\n      delete window.hmrData;\n    }\n\n    this.setupStore(appState);\n    this.ngReduxRouter.initialize(routerStateSelector);\n  }\n\n  protected setupStore(appState: IState = Map({})): void {\n    const store = createReduxStore(\n      <any>this.rootReducer.reducer(),\n      fromJS(appState),\n      this.getMiddleware(),\n      this.getEnhancers()\n    );\n\n    this.store.provideStore(store);\n    this.stableService.init();\n  }\n\n  protected getMiddleware(): Middleware[] {\n    let defaultMiddleware = [\n      removeEmptyActionsMiddleware,\n      observableMiddleware,\n      this.rootEpic.middleware,\n    ];\n\n    if (this.environment.additionalMiddleware) {\n      defaultMiddleware = [\n        ...defaultMiddleware,\n        ...this.environment.additionalMiddleware,\n      ];\n    }\n\n    return defaultMiddleware;\n  }\n\n  protected getEnhancers(): GenericStoreEnhancer[] {\n    let defaultEnhancers: GenericStoreEnhancer[] = [];\n\n    if (this.environment.additionalEnhancers) {\n      defaultEnhancers = [\n        ...defaultEnhancers,\n        ...this.environment.additionalEnhancers,\n      ];\n    }\n\n    if (!this.environment.production && this.devTools.isEnabled()) {\n      defaultEnhancers = [...defaultEnhancers, this.devTools.enhancer()];\n    }\n\n    return defaultEnhancers;\n  }\n}\n",
    "import { HttpErrorResponse } from '@angular/common/http';\nimport { NgRedux } from '@angular-redux/store';\nimport { Middleware } from 'redux';\nimport { createLogger } from 'redux-logger';\nimport { Observable } from 'rxjs/Observable';\nimport 'rxjs/add/operator/takeUntil';\n\nimport { IState, IAction, IReducer } from '../interfaces';\n\nexport type NextEnhancerCallback = (\n  reducer: IReducer,\n  initialState: IState,\n  enhancer: any\n) => NgRedux<IState>;\n\n/**\n *  Middleware to automatically dispatch async actions when getting an Observable as payload\n *\n * It dispatches a _START action at once,\n * a _NEXT action for every next tick with the result data of the next as payload\n * and a _ERROR action, should the Observable generate an exception.\n *\n * If the initial action includes an Observable in action.meta.cancel, this is used to cancel out the\n * _NEXT actions as soon as this one fires once.\n *\n * @param  store\n * @param  action\n */\nexport const observableMiddleware: any = (store: NgRedux<IState>) => (\n  next: (action: IAction) => any\n) => (action: IAction) => {\n  if (action.payload instanceof Observable) {\n    const baseType: string = action.type;\n    let obs: Observable<any> = action.payload;\n\n    if (action.meta && action.meta.cancel) {\n      // if the action has a cancel observable, use it\n      obs = obs.takeUntil(action.meta.cancel);\n    }\n\n    store.dispatch({\n      type: `${baseType}_START`,\n      meta: action.meta,\n    });\n\n    obs.subscribe(\n      (data: any) =>\n        store.dispatch({\n          type: `${baseType}_NEXT`,\n          payload: data,\n          meta: action.meta,\n        }),\n      (error: HttpErrorResponse) =>\n        store.dispatch({\n          type: `${baseType}_ERROR`,\n          payload: error,\n          meta: action.meta,\n        }),\n      () => {\n        if (action.meta && action.meta.dispatchCompleted) {\n          store.dispatch({ type: `${baseType}_COMPLETED` });\n        }\n      }\n    );\n  } else {\n    return next(action);\n  }\n};\n\n/**\n * Wrapper around redux-logger middleware to work with ImmutableJS data structures\n */\nexport const loggerMiddleware: Middleware = createLogger({\n  stateTransformer: (state: IState) => (state.toJS ? state.toJS() : state),\n});\n\n/**\n * Simple middleware to stop actions with an empty type from reaching the rest of the redux logic.\n *\n * @param  store\n */\nexport const removeEmptyActionsMiddleware: any = (_: NgRedux<IState>) => (\n  next: (action: IAction) => any\n) => (action: IAction) => {\n  if (action && action.type) {\n    return next(action);\n  }\n};\n",
    "import {\n  applyMiddleware,\n  compose,\n  createStore,\n  Store,\n  Reducer,\n  Middleware,\n  GenericStoreEnhancer,\n} from 'redux';\nimport { fromJS } from 'immutable';\nimport persistState from 'redux-localstorage';\nimport transit from 'transit-immutable-js';\n\nimport { IState } from '../interfaces';\n\n/**\n * Helper function to setup the redux store with reducers, middleware and enhancers.\n *\n * @export\n * @param  rootReducer\n * @param )]\n * @param  [middleware=[]]\n * @param  [enhancers=[]]\n * @returns\n */\nexport function createReduxStore(\n  rootReducer: Reducer<IState>,\n  initialState: IState = fromJS({}),\n  middleware: Middleware[] = [],\n  enhancers: GenericStoreEnhancer[] = []\n): Store<IState> {\n  return createStore(\n    rootReducer,\n    initialState,\n    compose(applyMiddleware(...middleware), ...enhancers)\n  ) as Store<IState>;\n}\n\n/**\n * Redux [[GenericStoreEnhancer]] that persists all state changes to localStorage,\n * knowing how to handle an ImmutableJS state.\n *\n * @export\n * @returns\n */\nexport function persistStateEnhancer(\n  paths?: string | string[]\n): GenericStoreEnhancer {\n  const converter = transit.withFilter((value: any) => {\n    return !(value instanceof Error);\n  });\n\n  return persistState(paths, {\n    serialize: (state: IState) => converter.toJSON(state),\n    deserialize: (data: string) => converter.fromJSON(data),\n    merge: (initialState: IState, persistedState: IState) =>\n      initialState.merge(persistedState),\n    slicer: (statePaths: undefined | string | string[]) => {\n      return (state: IState) => {\n        if (typeof statePaths === 'string') {\n          return state.filter((_, k) => k === statePaths);\n        } else if (Array.isArray(statePaths)) {\n          return state.filter((_, k) => statePaths.indexOf(k) !== -1);\n        } else {\n          return state;\n        }\n      };\n    },\n  });\n}\n\n/**\n * Selector function to return the current router substate.\n *\n * @export\n * @param  state\n * @returns string\n */\nexport function routerStateSelector(state: IState): string {\n  return state.get('router');\n}\n",
    "import { FormGroup, FormControl } from '@angular/forms';\nimport { Map } from 'immutable';\n\n/**\n * Base class for *dumb* components\n *\n * Data is transfered via Inputs and Outputs, no Store or Actions allowed.\n *\n * @export\n */\nexport class PresentationalComponent {\n  /**\n   * ImmutableJS aware track function\n   *\n   * Mainly used in ngFor trackBy\n   *\n   * @param  index\n   * @param  item\n   * @returns\n   *\n   * @memberOf PresentationalComponent\n   */\n  public identify(_: number, item: Map<string, any>): number {\n    if (typeof item.hashCode !== 'function') {\n      throw new TypeError(\n        `Given item is not of type Immutable, ${item.toString()} given!`\n      );\n    }\n    return item.hashCode();\n  }\n\n  /**\n   * Tests, wether a form component has errors\n   *\n   * @param  form\n   * @param  fieldName\n   * @param  [errorName]\n   * @returns\n   *\n   * @memberOf PresentationalComponent\n   */\n  public hasError(\n    form: FormGroup,\n    fieldName: string,\n    errorName?: string\n  ): boolean {\n    const control: FormControl = <FormControl>form.get(fieldName);\n\n    if (control.untouched) {\n      return false;\n    }\n\n    if (errorName) {\n      return !!(control.errors && control.errors[errorName]);\n    } else {\n      return !!control.errors;\n    }\n  }\n}\n",
    "import { OnDestroy, Injectable } from '@angular/core';\nimport { Subscription } from 'rxjs/Subscription';\nimport { Observable } from 'rxjs/Observable';\nimport 'rxjs/add/operator/first';\n\nimport {\n  INormalizedCollectionState,\n  INormalizedEntityState,\n} from '../redux/normalized/interfaces';\nimport { subStateStale } from '../redux/normalized/utils';\n\n/**\n * Base class for smart/container Components.\n *\n * This is used for Components with store data access.\n *\n * @export\n */\n@Injectable()\nexport class ContainerComponent implements OnDestroy {\n  public subscriptions: Subscription[] = [];\n  [key: string]: any;\n\n  /**\n   * Default OnDestroy callback that unsubscribes from all rxjs Subscriptions of this component.\n   *\n   * @memberof ContainerComponent\n   */\n  public ngOnDestroy() {\n    this.subscriptions.forEach((subscription: Subscription) => {\n      subscription.unsubscribe();\n    });\n\n    this.subscriptions = [];\n  }\n\n  /**\n   * Wrapper around [[Observable.subscribe]] that saves the [[Subscription]] to be removed later.\n   *\n   * @param  obs\n   * @param  callback\n   * @memberof ContainerComponent\n   */\n  public subscribeToObservable<T>(\n    obs: Observable<T>,\n    callback: (data: T) => void\n  ) {\n    this.subscriptions.push(obs.subscribe(callback.bind(this)));\n  }\n\n  /**\n   * Shortcut function to always have the current value from an [[Observable]] available in the [[Component]]\n   *\n   * @param  obs The Observable to get the data from.\n   * @param  propertyName The name of the property where to store the data in.\n   * @memberof ContainerComponent\n   */\n  public valueFromObservable<T>(obs: Observable<T>, propertyName: string) {\n    this.subscribeToObservable(obs, (data: T) => {\n      this[propertyName] = data;\n    });\n  }\n\n  /**\n   * Helper function to execute a callback only, if a [[INormalizedCollectionState]] has stale data.\n   *\n   * Usually used to check if the data in a selector is too old and the dispatch the read data action.\n   *\n   * @param  subState$\n   * @param  maxAge\n   * @param  callback\n   * @memberof ContainerComponent\n   */\n  public executeIfStateStale(\n    subState$: Observable<INormalizedCollectionState | INormalizedEntityState>,\n    maxAge: number,\n    callback: () => void\n  ): void {\n    subState$.first().subscribe(subState => {\n      if (subStateStale(subState, maxAge)) {\n        callback();\n      }\n    });\n  }\n}\n",
    "import {\n  INormalizedCollectionState,\n  INormalizedEntityState,\n  ICrudActionNames,\n} from './interfaces';\n\n/**\n * Generate standardized action names, used mainly for the normalized reducers.\n *\n * For all the CRUD actions all 4 actions (base, start, next, error) are created.\n *\n * @export\n * @param entityName\n * @param [namespace]\n */\nexport function generateCrudActionNames(\n  entityName: string,\n  namespace?: string\n): ICrudActionNames {\n  const BASE_NAME = namespace\n    ? `${namespace.toLocaleUpperCase()}_${entityName.toLocaleUpperCase()}`\n    : entityName.toLocaleUpperCase();\n\n  const START = 'START';\n  const NEXT = 'NEXT';\n  const ERROR = 'ERROR';\n\n  const READ = `${BASE_NAME}_READ`;\n  const READ_ONE = `${BASE_NAME}_READ_ONE`;\n  const CREATE = `${BASE_NAME}_CREATE`;\n  const UPDATE = `${BASE_NAME}_UPDATE`;\n  const DELETE = `${BASE_NAME}_DELETE`;\n\n  return {\n    read: READ,\n    readStart: `${READ}_${START}`,\n    readNext: `${READ}_${NEXT}`,\n    readNextUpdate: `${READ}_${NEXT}_UPDATE`,\n    readError: `${READ}_${ERROR}`,\n\n    readOne: READ_ONE,\n    readOneStart: `${READ_ONE}_${START}`,\n    readOneNext: `${READ_ONE}_${NEXT}`,\n    readOneNextUpdate: `${READ_ONE}_${NEXT}_UPDATE`,\n    readOneError: `${READ_ONE}_${ERROR}`,\n\n    create: CREATE,\n    createStart: `${CREATE}_${START}`,\n    createNext: `${CREATE}_${NEXT}`,\n    createError: `${CREATE}_${ERROR}`,\n\n    update: UPDATE,\n    updateStart: `${UPDATE}_${START}`,\n    updateNext: `${UPDATE}_${NEXT}`,\n    updateError: `${UPDATE}_${ERROR}`,\n\n    delete: DELETE,\n    deleteStart: `${DELETE}_${START}`,\n    deleteNext: `${DELETE}_${NEXT}`,\n    deleteError: `${DELETE}_${ERROR}`,\n\n    setCurrent: `${BASE_NAME}_SET_CURRENT`,\n    reset: `${BASE_NAME}_RESET`,\n    resetError: `${BASE_NAME}_RESET_ERROR`,\n  };\n}\n\n/**\n * Tests if a normalized subState has data that is too old.\n *\n * Given the maxAge, it tests if the data is already loaded and not older than maxAge.\n *\n * @export\n * @param state\n * @param maxAge=0\n */\nexport function subStateStale(\n  state: INormalizedCollectionState | INormalizedEntityState,\n  maxAge: number = 0\n): boolean {\n  const updatedAt = state.get('updatedAt');\n  return updatedAt === 0 || Date.now() - updatedAt - maxAge > 0;\n}\n\n/**\n * Tests if a normalized state has a specific model instace\n *\n * @export\n * @param  collectionSubState the given state\n * @param  entitiesName the name of the collection in entities\n * @param  id the id of the model instance to fetch\n * @param  [maxAge] if the collection is older than maxAge, return that there is no fitting model\n * @returns\n */\nexport function hasModel(\n  collectionSubState: INormalizedCollectionState,\n  entitiesName: string,\n  id: string,\n  maxAge?: number\n): boolean {\n  id = String(id);\n\n  if (maxAge) {\n    const updatedAt: any = collectionSubState.get('updatedAt');\n    const dataCurrent: boolean = Date.now() - updatedAt - maxAge < 0;\n\n    if (!dataCurrent) {\n      return false;\n    }\n  }\n\n  return collectionSubState.hasIn(['entities', entitiesName, id]);\n}\n",
    "/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = Object.setPrototypeOf ||\r\n    ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n    function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = Object.assign || function __assign(t) {\r\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n        s = arguments[i];\r\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n    }\r\n    return t;\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = y[op[0] & 2 ? \"return\" : op[0] ? \"throw\" : \"next\"]) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [0, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r);  }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { if (o[n]) i[n] = function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; }; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator];\r\n    return m ? m.call(o) : typeof __values === \"function\" ? __values(o) : o[Symbol.iterator]();\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n"
  ],
  "names": [
    "isMobilePhone",
    "fromJS",
    "List",
    "denormalize",
    "NgModule",
    "routerReducer",
    "Inject",
    "Injectable",
    "combineEpics",
    "tslib_1.__spread",
    "enableBatching",
    "combineReducers",
    "NgRedux",
    "BehaviorSubject",
    "store",
    "http",
    "normalize",
    "TranslateService",
    "TranslateModule",
    "dispatch",
    "InjectionToken",
    "Map"
  ],
  "mappings": "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"
}
