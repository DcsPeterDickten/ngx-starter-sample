{
  "version": 3,
  "file": "dcs-ngx-utils.js",
  "sources": [
    "ng://@dcs/ngx-utils/out/src/utils/validators.ts",
    "ng://@dcs/ngx-utils/out/src/utils/immutable.ts",
    "ng://@dcs/ngx-utils/out/src/utils/json-schema.ts",
    "ng://@dcs/ngx-utils/out/src/utils/default-error-handler.class.ts",
    "ng://@dcs/ngx-utils/out/src/utils/default-environment.class.ts",
    "ng://@dcs/ngx-utils/out/src/redux/normalized/selectors.ts",
    "ng://@dcs/ngx-utils/out/src/redux/reselect.ts",
    "ng://@dcs/ngx-utils/out/src/redux/normalized/reducers.ts",
    "ng://@dcs/ngx-utils/out/src/redux/reducers.ts",
    "ng://@dcs/ngx-utils/out/src/redux/actions.ts",
    "ng://@dcs/ngx-utils/out/src/random.ts",
    "ng://@dcs/ngx-utils/out/src/ngx-utils.module.ts",
    "ng://@dcs/ngx-utils/out/src/redux/redux.module.ts",
    "ng://@dcs/ngx-utils/out/src/redux/root.epic.ts",
    "ng://@dcs/ngx-utils/out/src/redux/root.reducer.ts",
    "ng://@dcs/ngx-utils/out/src/services/stable.service.ts",
    "ng://@dcs/ngx-utils/out/src/services/rest.service.ts",
    "ng://@dcs/ngx-utils/out/src/translate/app-translate.module.ts",
    "ng://@dcs/ngx-utils/out/src/translate/locale.service.ts",
    "ng://@dcs/ngx-utils/out/src/translate/translate.actions.ts",
    "ng://@dcs/ngx-utils/out/src/tokens.ts",
    "ng://@dcs/ngx-utils/out/src/modules/main-base-module.class.ts",
    "ng://@dcs/ngx-utils/out/src/redux/middleware.ts",
    "ng://@dcs/ngx-utils/out/src/redux/store.ts",
    "ng://@dcs/ngx-utils/out/src/components/presentational-component.ts",
    "ng://@dcs/ngx-utils/out/src/components/container-component.ts",
    "ng://@dcs/ngx-utils/out/src/redux/normalized/utils.ts"
  ],
  "sourcesContent": [
    "import { FormControl } from '@angular/forms';\nimport { isInt, isFQDN, isMobilePhone, isEmail } from 'validator';\nimport { parse, isValid } from 'date-fns';\n\nexport function validateEmail(c: FormControl) {\n  return isEmail(String(c.value)) ? null : { validateEmail: { valid: false } };\n}\n\nexport function validatePhone(c: FormControl) {\n  return isMobilePhone(String(c.value), 'de-DE')\n    ? null\n    : { validatePhone: { valid: false } };\n}\n\nexport function validateFQDN(c: FormControl) {\n  return isFQDN(String(c.value)) ? null : { validateFQDN: { valid: false } };\n}\n\nexport function validatePositiveInteger(c: FormControl) {\n  const value: string = String(c.value);\n  return isInt(value, { min: 1 })\n    ? null\n    : { validatePositiveInteger: { valid: false } };\n}\n\nexport function validateDate(c: FormControl) {\n  const value: Date = parse(c.value, 'YYYY-MM-DD', 0);\n  return isValid(value) ? null : { validateDate: { valid: false } };\n}\n\nexport function validateTime(c: FormControl) {\n  const value: Date = parse(c.value, 'HH:mm', 0);\n  return isValid(value) ? null : { validateTime: { valid: false } };\n}\n",
    "import { List, fromJS } from 'immutable';\nimport { Constructor } from '../interfaces';\n\nexport function EmbeddedRecord(recordClass: any) {\n  return function(target: any, key: string): any {\n    const cache = new WeakMap();\n\n    return {\n      get() {\n        if (!cache.has(this)) {\n          cache.set(this, new recordClass(this.get(key)));\n        }\n        return cache.get(this);\n      }\n    };\n  };\n}\n\nexport function EmbeddedCollection(\n  recordClass: any,\n  collectionFactory: any = List\n) {\n  return function(target: any, key: string): any {\n    const cache = new WeakMap();\n\n    return {\n      get() {\n        if (!cache.has(this)) {\n          const collection = this.get(key) || collectionFactory();\n          cache.set(\n            this,\n            collectionFactory(\n              collection.map((data: any) => new recordClass(data))\n            )\n          );\n        }\n        return cache.get(this);\n      }\n    };\n  };\n}\n\nexport function ExtendedRecord<TBase extends Constructor<{}>>(Base: TBase) {\n  type Params = Partial<TBase>;\n\n  return class extends Base {\n    public merge: any;\n\n    constructor(...args: any[]) {\n      const params: Params = fromJS(args.shift());\n      super(params, ...args);\n    }\n\n    public with(params: Params) {\n      return this.merge(fromJS(params)) as this;\n    }\n  };\n}\n",
    "// @ts-ignore\nimport Ajv from 'ajv';\n\n/**\n * Given a JSON schema, this compiles a validator function to use later\n *\n * Basically a small wrapper around [[Ajv]]\n *\n * @export\n * @param  jsonSchema\n * @param  [ajv]\n * @returns\n */\nexport function buildSchemaValidator(jsonSchema: object, ajv?: any): any {\n  if (!ajv) {\n    ajv = new Ajv({ allErrors: true });\n  }\n\n  return ajv.compile(jsonSchema);\n}\n",
    "import { ErrorHandler } from '@angular/core';\n\nexport class DefaultErrorHandler implements ErrorHandler {\n  public handleError(error: Error) {\n    // clean up potential broken persisted state if an error bubbles up to the global handler\n    localStorage.clear();\n    throw error;\n  }\n}\n",
    "import { GenericStoreEnhancer, Middleware } from 'redux';\n\nimport { IEnvironment, IAutoUpdateSettings } from '../interfaces';\n\n/**\n * Base class for Environment settings.\n *\n * Subclass this to add a real Environment to your app.\n *\n * @export\n * @abstract\n */\nexport abstract class DefaultEnvironment implements IEnvironment {\n  public production: boolean = false;\n\n  /**\n   * Base API URL for current Environment, used by [[RestService]]\n   *\n   * @memberof DefaultEnvironment\n   */\n  public apiUrl: string = '';\n  /**\n   * Thow if a given JSON Schema produces a validation error on data?\n   *\n   * @memberof DefaultEnvironment\n   */\n  public throwOnSchemaError: boolean = true;\n  /**\n   * Ask user for confirmation to relaod the page after a ServiceWorker update?\n   *\n   * @memberof DefaultEnvironment\n   */\n  public autoUpdate: IAutoUpdateSettings = 'always';\n  public updateMessage: string = 'A new version of the app is available. Do you want to reload the page to update?';\n  /**\n   * HTML <title> tag\n   *\n   * @memberof DefaultEnvironment\n   */\n  public pageTitle: string = 'DCS Angular Starter';\n  /**\n   * What to set as <base href>\n   *\n   * see https://developer.mozilla.org/en-US/docs/Web/HTML/Element/base\n   *\n   * @memberof DefaultEnvironment\n   */\n  public base: string = '/';\n  /**\n   * Add app specific redux enhancers here.\n   *\n   * @memberof DefaultEnvironment\n   */\n  public additionalEnhancers: GenericStoreEnhancer[] = [];\n  /**\n   * Add app specific middleware here.\n   *\n   * @memberof DefaultEnvironment\n   */\n  public additionalMiddleware: Middleware[] = [];\n  /**\n   * Add here, whatever additional settings your app needs\n   *\n   * @memberof DefaultEnvironment\n   */\n  public additionalSettings = {};\n}\n",
    "import { denormalize, Schema } from 'normalizr';\nimport { Selector } from 'reselect';\nimport { List, Map, Record } from 'immutable';\n\nimport { Constructor, IState } from '../../interfaces';\nimport {\n  INormalizedCollectionSelectors,\n  INormalizedCollectionState,\n  INormalizedEntityState,\n  INormalizedEntitySelectors,\n} from './interfaces';\nimport { createSelector } from '../reselect';\n\n/**\n * Creates selectors for a reducer based on a [[INormalizedEntityState]].\n *\n * Provides base selectors for all attributes and also for building a [[Record]] instance out of the raw data\n *\n * @export\n * @param  entityName\n * @param  entityClass The [[Record.Class]] class to build the model from\n * @param  schema The same schema that was used no normalize the data in the first place\n * @param ]\n * @returns\n */\nexport function normalizedEntitySelectorFactory<T extends Record<any>>(\n  entityName: string,\n  entityClass: Constructor<T>,\n  schema: Schema,\n  customSelectors: { [key: string]: Selector<IState, any> } = {}\n): INormalizedEntitySelectors<T> {\n  const baseSelector = (state: IState): INormalizedEntityState =>\n    state.get(entityName);\n  const idSelector = (state: IState): string =>\n    baseSelector(state).get('result');\n  const entitiesSelector = (state: IState): Map<string, Map<string, any>> =>\n    baseSelector(state).get('entities');\n\n  const modelSelector = createSelector(\n    [idSelector, entitiesSelector],\n    (id: string, entities: Map<string, Map<string, Map<string, any>>>) => {\n      if (id) {\n        const denormalizedData = denormalize(id, schema, entities);\n        return new entityClass(denormalizedData);\n      } else {\n        return new entityClass();\n      }\n    }\n  );\n\n  return Object.assign(\n    {},\n    {\n      subStateSelector: baseSelector,\n      loadingSelector: (state: IState): boolean =>\n        baseSelector(state).get('loading'),\n      loadedSelector: (state: IState): boolean =>\n        baseSelector(state).get('loaded'),\n      updatingSelector: (state: IState): boolean =>\n        baseSelector(state).get('updating'),\n      updatedAtSelector: (state: IState): number =>\n        baseSelector(state).get('updatedAt'),\n      idSelector,\n      modelSelector,\n    },\n    customSelectors\n  );\n}\n\n/**\n * Creates selectors for a reducer based on a [[INormalizedCollectionState]].\n *\n * Provides base selectors for all attributes and also for building a collection of [[Record]] instances out of the raw data\n *\n * @export\n * @param  entityName\n * @param  entityClass The [[Record.Class]] class to build the models from\n * @param  schema The same schema that was used no normalize the data in the first place\n * @param ]\n * @returns\n */\nexport function normalizedCollectionSelectorsFactory<T extends Record<any>>(\n  entityName: string,\n  entityClass: Constructor<T>,\n  schema: Schema,\n  customSelectors: { [key: string]: Selector<IState, any> } = {}\n): INormalizedCollectionSelectors<T> {\n  const baseSelector = (state: IState): INormalizedCollectionState =>\n    state.get(entityName);\n  const idsSelector = (state: IState): List<string> =>\n    baseSelector(state).get('result');\n  const entitiesSelector = (state: IState): Map<string, Map<string, any>> =>\n    baseSelector(state).get('entities');\n\n  const modelsSelector = createSelector(\n    [idsSelector, entitiesSelector],\n    (\n      ids: List<string>,\n      entities: Map<string, Map<string, Map<string, any>>>\n    ) => {\n      const denormalizedData = denormalize(ids, schema, entities);\n      return denormalizedData.map(\n        (item: Map<string, any>) => new entityClass(item)\n      );\n    }\n  );\n\n  const modelsMapSelector = createSelector([modelsSelector], models => {\n    return models.reduce((acc: Map<string, T>, item: T) => {\n      return acc.set(String(item.get('id', null)), item);\n    }, Map());\n  });\n\n  return Object.assign(\n    {},\n    {\n      subStateSelector: baseSelector,\n      loadingSelector: (state: IState): boolean =>\n        baseSelector(state).get('loading'),\n      loadedSelector: (state: IState): boolean =>\n        baseSelector(state).get('loaded'),\n      updatingSelector: (state: IState): boolean =>\n        baseSelector(state).get('updating'),\n      updatedAtSelector: (state: IState): number =>\n        baseSelector(state).get('updatedAt'),\n      idsSelector,\n      modelsSelector,\n      modelsMapSelector,\n    },\n    customSelectors\n  );\n}\n",
    "import { createSelectorCreator, defaultMemoize, createSelector as cs } from 'reselect';\nimport { is } from 'immutable';\n\n/**\n * Small wrapper around reselect [[createSelector]], that knows how to compare ImmutableJS data structures.\n */\nexport const createSelector: typeof cs = createSelectorCreator(defaultMemoize, is);\n",
    "import { fromJS, Map } from 'immutable';\n\nimport { mergeState, createImmutableState } from '../reducers';\nimport { IAction, ISubStateReducer } from '../../interfaces';\nimport {\n  INormalizedCollectionState,\n  INormalizedCollectionAction,\n  INormalizedEntityAction,\n  INormalizedEntityState,\n} from './interfaces';\nimport { generateCrudActionNames } from './utils';\n\nexport function createNormalizedEntityState(): INormalizedEntityState {\n  return createImmutableState({\n    result: '',\n    entities: Map() as any,\n    loading: false,\n    loaded: false,\n    updating: false,\n    updatedAt: 0,\n    error: null,\n  });\n}\n\n/**\n * This creates a reducer with full CRUD functionality for a single entity.\n *\n * Requirement: Data received from API is normalized, see https://github.com/paularmstrong/normalizr\n *\n * @export\n * @param  entityName\n * @param  [namespace]\n * @param [customReducers]\n * @returns\n */\nexport function normalizedEntityReducerFactory(\n  entityName: string,\n  namespace?: string,\n  customReducers?: {\n    [key: string]: (\n      state: INormalizedEntityState,\n      action: IAction\n    ) => INormalizedEntityState;\n  }\n): ISubStateReducer<INormalizedEntityState> {\n  const initialState: INormalizedEntityState = createNormalizedEntityState();\n\n  return function(\n    state: INormalizedEntityState = initialState,\n    action: IAction\n  ): INormalizedEntityState {\n    const actionNames = generateCrudActionNames(entityName, namespace);\n\n    const defaultReducers = {\n      [actionNames.readOneStart]: (s: INormalizedEntityState, a: IAction) => {\n        return mergeState(initialState, { loading: true });\n      },\n      [actionNames.readOneNext]: (\n        s: INormalizedEntityState,\n        a: INormalizedEntityAction\n      ) => {\n        return mergeState(s, {\n          loading: false,\n          loaded: true,\n          updatedAt: Date.now(),\n          entities: fromJS(a.payload.entities),\n          result: a.payload.result,\n        });\n      },\n      [actionNames.readOneError]: (s: INormalizedEntityState, a: IAction) => {\n        return mergeState(initialState, {\n          error: a.payload,\n        });\n      },\n      [actionNames.createStart]: (s: INormalizedEntityState, a: IAction) => {\n        return mergeState(s, { updating: true, error: null });\n      },\n      [actionNames.createNext]: (\n        s: INormalizedEntityState,\n        a: INormalizedEntityAction\n      ) => {\n        return mergeState(s, {\n          updating: false,\n          loaded: true,\n          updatedAt: Date.now(),\n          entities: fromJS(a.payload.entities),\n          result: a.payload.result,\n        });\n      },\n      [actionNames.createError]: (s: INormalizedEntityState, a: IAction) => {\n        return mergeState(initialState, { updating: false, error: a.payload });\n      },\n      [actionNames.updateStart]: (s: INormalizedEntityState, a: IAction) => {\n        return mergeState(s, { updating: true, error: null });\n      },\n      [actionNames.updateNext]: (\n        s: INormalizedEntityState,\n        a: INormalizedEntityAction\n      ) => {\n        return mergeState(s, {\n          updating: false,\n          loaded: true,\n          updatedAt: Date.now(),\n          entities: fromJS(a.payload.entities),\n          result: a.payload.result,\n        });\n      },\n      [actionNames.updateError]: (s: INormalizedEntityState, a: IAction) => {\n        return mergeState(s, { updating: false, error: a.payload });\n      },\n      [actionNames.deleteStart]: (s: INormalizedEntityState, a: IAction) => {\n        return mergeState(s, { updating: true, error: null });\n      },\n      [actionNames.deleteNext]: (s: INormalizedEntityState, a: IAction) => {\n        return initialState;\n      },\n      [actionNames.deleteError]: (s: INormalizedEntityState, a: IAction) => {\n        return mergeState(s, { updating: false, error: a.payload });\n      },\n      [actionNames.setCurrent]: (\n        s: INormalizedEntityState,\n        a: INormalizedEntityAction\n      ) => {\n        return mergeState(initialState, {\n          loaded: true,\n          entities: fromJS(a.payload.entities),\n          result: a.payload.result,\n        });\n      },\n      [actionNames.reset]: (s: INormalizedEntityState, a: IAction) => {\n        return initialState;\n      },\n      [actionNames.resetError]: (s: INormalizedEntityState, a: IAction) => {\n        return s.set('error', null);\n      },\n    };\n\n    const reducers = Object.assign({}, defaultReducers, customReducers);\n\n    if (reducers[action.type]) {\n      return reducers[action.type](state, action);\n    }\n\n    return state;\n  };\n}\n\nexport function createNormalizedCollectionState(): INormalizedCollectionState {\n  return createImmutableState({\n    result: [] as any,\n    entities: {} as any,\n    loading: false,\n    loaded: false,\n    updating: false,\n    updatedAt: 0,\n    error: null,\n  });\n}\n\n/**\n * This creates a reducer with full CRUD functionality for a collection of entities.\n *\n * Requirement: Data received from API is normalized, see https://github.com/paularmstrong/normalizr\n *\n * @export\n * @param  entityName\n * @param  [namespace]\n * @param [customReducers]\n * @returns\n */\nexport function normalizedCollectionReducerFactory(\n  entityName: string,\n  namespace?: string,\n  customReducers?: {\n    [key: string]: (\n      state: INormalizedCollectionState,\n      action: IAction\n    ) => INormalizedCollectionState;\n  }\n): ISubStateReducer<INormalizedCollectionState> {\n  const initialState: INormalizedCollectionState = createNormalizedCollectionState();\n\n  return function(\n    state: INormalizedCollectionState = initialState,\n    action: IAction\n  ): INormalizedCollectionState {\n    const actionNames = generateCrudActionNames(entityName, namespace);\n\n    const defaultReducers = {\n      [actionNames.readStart]: (s: INormalizedCollectionState, a: IAction) => {\n        return mergeState(initialState, { loading: true });\n      },\n      [actionNames.readNext]: (\n        s: INormalizedCollectionState,\n        a: INormalizedCollectionAction\n      ) => {\n        return mergeState(s, {\n          loading: false,\n          loaded: true,\n          updatedAt: Date.now(),\n          entities: fromJS(action.payload.entities),\n          result: action.payload.result,\n        });\n      },\n      [actionNames.readError]: (s: INormalizedCollectionState, a: IAction) => {\n        return mergeState(initialState, { error: a.payload });\n      },\n      [actionNames.createStart]: (\n        s: INormalizedCollectionState,\n        a: IAction\n      ) => {\n        return mergeState(s, { updating: true, error: null });\n      },\n      [actionNames.createNext]: (\n        s: INormalizedCollectionState,\n        a: INormalizedEntityAction\n      ) => {\n        return mergeState(s, {\n          updating: false,\n          entities: s.get('entities').mergeDeep(fromJS(a.payload.entities)),\n          result: s.get('result').push(a.payload.result),\n        });\n      },\n      [actionNames.createError]: (\n        s: INormalizedCollectionState,\n        a: IAction\n      ) => {\n        return mergeState(s, {\n          updating: false,\n          error: a.payload,\n        });\n      },\n      [actionNames.updateStart]: (\n        s: INormalizedCollectionState,\n        a: IAction\n      ) => {\n        return mergeState(s, { updating: true, error: null });\n      },\n      [actionNames.updateNext]: (\n        s: INormalizedCollectionState,\n        a: INormalizedEntityAction\n      ) => {\n        return mergeState(s, {\n          updating: false,\n          entities: s.get('entities').mergeDeep(fromJS(a.payload.entities)),\n        });\n      },\n      [actionNames.updateError]: (\n        s: INormalizedCollectionState,\n        a: IAction\n      ) => {\n        return mergeState(s, {\n          updating: false,\n          error: a.payload,\n        });\n      },\n      [actionNames.deleteStart]: (\n        s: INormalizedCollectionState,\n        a: IAction\n      ) => {\n        return mergeState(s, { updating: true, error: null });\n      },\n      [actionNames.deleteNext]: (\n        s: INormalizedCollectionState,\n        a: INormalizedEntityAction\n      ) => {\n        return mergeState(s, {\n          updating: false,\n          entities: s.get('entities').deleteIn([entityName, a.payload.result]),\n          result: s\n            .get('result')\n            .update(ids => ids.filterNot(id => id === a.payload.result)),\n        });\n      },\n      [actionNames.deleteError]: (\n        s: INormalizedCollectionState,\n        a: IAction\n      ) => {\n        return mergeState(s, {\n          updating: false,\n          error: a.payload,\n        });\n      },\n      [actionNames.reset]: (s: INormalizedCollectionState, a: IAction) => {\n        return initialState;\n      },\n      [actionNames.resetError]: (s: INormalizedCollectionState, a: IAction) => {\n        return s.set('error', null);\n      },\n    };\n\n    const reducers = Object.assign({}, defaultReducers, customReducers);\n\n    if (reducers[action.type]) {\n      return reducers[action.type](state, action);\n    }\n\n    return state;\n  };\n}\n",
    "import { fromJS, Map } from 'immutable';\n\nexport interface ImmutableState<T> extends Map<string, any> {\n  get<K extends keyof T>(name: K): T[K];\n  OrderedSet<K extends keyof T>(name: K, value: T[K]): this;\n  merge<O extends Partial<{ [K in keyof T]: T[K] }>>(diff: O): this;\n}\n\n/**\n * Small wrapper around Immutable.fromJS, that sets correct typings.\n *\n * Using this method we can create a [[Map]] that will typecheck keys\n * and forbids adding new keys.\n */\nexport function createImmutableState<T extends object>(o: T) {\n  return fromJS(o) as ImmutableState<T>;\n}\n\n/**\n * Returns the merge result of the given state and the diff, while ensuring diff is an immutable before merge.\n *\n * @param state\n * @param diff\n */\nexport function mergeState<T, D extends { [K in keyof T]: T[K] }>(\n  state: ImmutableState<T>,\n  diff: Partial<D>\n): ImmutableState<T> {\n  return state.merge(fromJS(diff));\n}\n",
    "export interface IAsyncActionNames {\n  base: string;\n  start: string;\n  next: string;\n  error: string;\n}\n\n/**\n * Generates action names via naming convention based on [[observableMiddleware]].\n *\n * With the given baseName 'PRODUCT' it returns the object\n * ```\n * {\n *   base:  'PRODUCT',\n *   start: 'PRODUCT_START',\n *   next:  'PRODUCT_NEXT',\n *   error: 'PRODUCT_ERROR'\n * }\n * ```\n *\n * @export\n * @param  baseName\n * @returns\n */\nexport function generateAsyncActionNames(baseName: string): IAsyncActionNames {\n  return {\n    base: baseName,\n    start: baseName + '_START',\n    next: baseName + '_NEXT',\n    error: baseName + '_ERROR',\n  };\n}\n",
    "export function random(): number {\n  return 42;\n}\n",
    "import { NgModule } from '@angular/core';\nimport { AppTranslateModule } from './translate/app-translate.module';\nimport { StableService } from './services/stable.service';\nimport { RestService } from './services/rest.service';\nimport { ReduxModule } from './redux/redux.module';\n\n@NgModule({\n  imports: [AppTranslateModule, ReduxModule],\n  exports: [AppTranslateModule, ReduxModule],\n  providers: [StableService, RestService]\n})\nexport class NgxUtilsModule {}\n",
    "import { NgModule } from '@angular/core';\nimport { routerReducer } from '@angular-redux/router';\n\nimport { RootReducer } from './root.reducer';\nimport { RootEpic, dummyEpic } from './root.epic';\nimport { APP_EPICS, APP_REDUCERS } from '../tokens';\n\n@NgModule({\n  providers: [\n    RootReducer,\n    RootEpic,\n    {\n      multi: true,\n      provide: APP_REDUCERS,\n      useValue: { name: 'router', reducer: routerReducer },\n    },\n    { provide: APP_EPICS, useValue: dummyEpic, multi: true },\n  ],\n})\nexport class ReduxModule {}\n",
    "import { Injectable, Inject } from '@angular/core';\nimport {\n  combineEpics,\n  ActionsObservable,\n  createEpicMiddleware,\n  EpicMiddleware,\n} from 'redux-observable';\nimport { Observable } from 'rxjs/Observable';\nimport 'rxjs/add/operator/mergeMap';\nimport 'rxjs/add/observable/empty';\n\nimport { IAction, IState, IAppEpic, IEpic, IEpicClass } from '../interfaces';\nimport { APP_EPICS } from '../tokens';\n\n// create one noop epic to fill provider with at least one value\n// for epics docs see https://redux-observable.js.org/\nexport function dummyEpic(action$: ActionsObservable<IAction>) {\n  return action$.mergeMap(() => {\n    return Observable.empty();\n  });\n}\n\n/**\n * Wrapper class to activate all injected [[Epic]] instances and forward them to the redux-observable middleware.\n *\n * @export\n */\n@Injectable()\nexport class RootEpic {\n  public middleware: EpicMiddleware<IAction, IState>;\n\n  constructor(@Inject(APP_EPICS) private epicConfigs: IAppEpic[]) {\n    const epics = this.buildEpics(epicConfigs);\n    this.middleware = createEpicMiddleware(combineEpics(...epics));\n  }\n\n  /**\n   * Returns the Root Epic given to the middleware\n   *\n   * @returns\n   * @memberof RootEpic\n   */\n  public epic(): IAppEpic {\n    return combineEpics(...this.epicConfigs);\n  }\n\n  /**\n   * This method collects the [[Epic]] functions from the injected APP_EPICS and extracts the function\n   * from [[IEpicClass]] if given.\n   *\n   * @protected\n   * @param  epicConfigs\n   * @returns\n   * @memberof RootEpic\n   */\n  protected buildEpics(epicConfigs: IAppEpic[]): IEpic[] {\n    return epicConfigs.map(config => {\n      if ((<IEpicClass>config).epic) {\n        return (<IEpicClass>config).epic();\n      } else {\n        return config as IEpic;\n      }\n    });\n  }\n}\n",
    "import { Injectable, Inject } from '@angular/core';\nimport { combineReducers } from 'redux-immutable';\nimport { enableBatching } from 'redux-batched-actions';\n\nimport { IReducer, IReducerConfig, IReducerClass } from '../interfaces';\nimport { APP_REDUCERS } from '../tokens';\n\n/**\n * Class that builds the root reducer for redux from all injected [[APP_REDUCERS]].\n *\n * @export\n */\n@Injectable()\nexport class RootReducer {\n  private currentReducers: any = {};\n\n  constructor(@Inject(APP_REDUCERS) private reducerConfigs: IReducerConfig[]) {}\n\n  /**\n   *\n   *\n   * @param  [newReducerConfigs]\n   * @returns\n   * @memberof RootReducer\n   */\n  public reducer(newReducerConfigs?: IReducerConfig[]): IReducer {\n    return enableBatching(\n      combineReducers(this.buildReducers(newReducerConfigs))\n    ) as IReducer;\n  }\n\n  /**\n   * Builds the root reducer.\n   *\n   * @param  [newReducerConfigs]\n   * @returns\n   * @memberof RootReducer\n   */\n  public buildReducers(newReducerConfigs?: IReducerConfig[]) {\n    const currentReducers = Object.assign({}, this.currentReducers);\n    const reducerConfigs: IReducerConfig[] = newReducerConfigs\n      ? newReducerConfigs\n      : this.reducerConfigs;\n\n    this.currentReducers = reducerConfigs.reduce((r, config) => {\n      if (typeof (config.reducer as IReducerClass).reducer === 'function') {\n        r[config.name] = (config.reducer as IReducerClass).reducer();\n      } else {\n        r[config.name] = config.reducer;\n      }\n\n      return r;\n    }, currentReducers);\n\n    return this.currentReducers;\n  }\n}\n",
    "import { Injectable } from '@angular/core';\nimport { NgRedux } from '@angular-redux/store';\nimport { Observable } from 'rxjs/Observable';\nimport { BehaviorSubject } from 'rxjs/BehaviorSubject';\nimport 'rxjs/add/operator/distinctUntilChanged';\n\nimport { RestService } from './rest.service';\nimport { IState } from '../interfaces';\n\n/**\n * Angular Service to inform the application wether the state is currently stable.\n *\n * Stable is defined currently by not having any open HTTP requests and no store updates.\n */\n@Injectable()\nexport class StableService {\n  /**\n   * Subscribe to this [[Observable]] to receive stable/unstable events.\n   *\n   * @memberof StableService\n   */\n  public storeStable$: Observable<boolean>;\n  private onStoreStable$: BehaviorSubject<boolean> = new BehaviorSubject(false);\n\n  constructor(private http: RestService, private store: NgRedux<IState>) {\n    this.storeStable$ = this.onStoreStable$.distinctUntilChanged();\n  }\n\n  public init() {\n    this.store.subscribe(() => {\n      window.storeStable = false;\n      this.onStoreStable$.next(false);\n\n      if (this.http.activeRequests === 0) {\n        window.storeStable = true;\n        this.onStoreStable$.next(true);\n      }\n    });\n  }\n}\n",
    "import { Injectable, Inject } from '@angular/core';\nimport { HttpClient, HttpErrorResponse } from '@angular/common/http';\nimport { Schema, normalize } from 'normalizr';\n// @ts-ignore\nimport Ajv from 'ajv';\nimport { Observable } from 'rxjs/Observable';\nimport 'rxjs/add/operator/catch';\nimport 'rxjs/add/operator/map';\nimport 'rxjs/add/operator/share';\n\nimport { IEnvironment } from '../interfaces';\nimport { APP_ENVIRONMENT } from '../tokens';\n\n/**\n * Wrapper class around Angular [[Http]].\n *\n * Adds features like schema validation, normalizing data, base API URL,\n * tracking the number of active requests ...\n *\n * @export\n */\n@Injectable()\nexport class RestService {\n  // tslint:disable-next-line:variable-name\n  protected _activeRequests: number = 0;\n\n  get activeRequests(): number {\n    return this._activeRequests;\n  }\n\n  set activeRequests(num: number) {\n    this._activeRequests = num;\n  }\n\n  constructor(\n    protected http: HttpClient,\n    @Inject(APP_ENVIRONMENT) protected environment: IEnvironment\n  ) {}\n\n  /**\n   * HTTP GET\n   *\n   * @param  path\n   * @param [options]\n   * @param  [schema]\n   * @param  [jsonSchemaValidator]\n   * @returns\n   * @memberof RestService\n   */\n  public get(\n    path: string,\n    options: any = {},\n    schema?: Schema,\n    jsonSchemaValidator?: Ajv.ValidateFunction\n  ): Observable<any> {\n    return this.request('get', path, options, schema, jsonSchemaValidator);\n  }\n\n  /**\n   * HTTP POST\n   *\n   * @param  path\n   * @param  body\n   * @param [options]\n   * @param [schema]\n   * @param [jsonSchemaValidator]\n   * @returns\n   * @memberof RestService\n   */\n  public post(\n    path: string,\n    body: any,\n    options: any = {},\n    schema?: Schema,\n    jsonSchemaValidator?: Ajv.ValidateFunction\n  ): Observable<any> {\n    options = { ...options, body };\n    return this.request('post', path, options, schema, jsonSchemaValidator);\n  }\n\n  /**\n   * HTTP PUT\n   *\n   * @param  path\n   * @param  body\n   * @param [options]\n   * @param  [schema]\n   * @param  [jsonSchemaValidator]\n   * @returns\n   * @memberof RestService\n   */\n  public put(\n    path: string,\n    body: any,\n    options: any = {},\n    schema?: Schema,\n    jsonSchemaValidator?: Ajv.ValidateFunction\n  ): Observable<any> {\n    options = { ...options, body };\n    return this.request('put', path, options, schema, jsonSchemaValidator);\n  }\n\n  /**\n   * HTTP DELETE\n   *\n   * @param  path\n   * @param [options]\n   * @param  [schema]\n   * @param  [jsonSchemaValidator]\n   * @returns\n   * @memberof RestService\n   */\n  public delete(\n    path: string,\n    options: any = {},\n    schema?: Schema,\n    jsonSchemaValidator?: Ajv.ValidateFunction\n  ): Observable<any> {\n    return this.request('delete', path, options, schema, jsonSchemaValidator);\n  }\n\n  /**\n   * Base method called by the other get/post... methods\n   *\n   * @protected\n   * @param  path\n   * @param  requestOptions\n   * @param  [schema]\n   * @param  [jsonSchemaValidator]\n   * @returns\n   * @memberof RestService\n   */\n  protected request(\n    type: string,\n    path: string,\n    requestOptions: any,\n    schema?: Schema,\n    jsonSchemaValidator?: Ajv.ValidateFunction\n  ): Observable<any> {\n    const url: string = this.getUrl(path);\n    requestOptions = this.buildRequestOptions(requestOptions);\n    this.activeRequests++;\n\n    return this.http\n      .request(type, url, requestOptions)\n      .map((data: any) => {\n        if (jsonSchemaValidator) {\n          const valid = jsonSchemaValidator(data);\n          if (!valid) {\n            this.logSchemaErrors(\n              jsonSchemaValidator.errors,\n              data,\n              path,\n              requestOptions\n            );\n            if (this.environment.throwOnSchemaError) {\n              throw new Error('Schema validation failed');\n            }\n          }\n        }\n        return data;\n      })\n      .map((data: any) => this.normalizePayload(data, schema))\n      .map((data: any) => {\n        this.activeRequests--;\n        return data;\n      })\n      .catch((error: HttpErrorResponse) => {\n        this.activeRequests--;\n        throw error;\n      })\n      .share();\n  }\n\n  protected logSchemaErrors(\n    errors: Ajv.ErrorObject[] | null | undefined,\n    responseData: any,\n    path: string,\n    requestOptions: any\n  ): void {\n    if (errors && errors.length) {\n      const css =\n        'color: red; background-color: #ffe6e6; border: 1px solid #ff9999; padding: 1px 10px';\n      console.group('%cSchema validation failed', css);\n      console.log('Request:', path, requestOptions);\n      console.log('Response Data:', responseData);\n      console.group('%cErrors:', css);\n      errors.forEach(error => {\n        console.log(error);\n      });\n      console.groupEnd();\n      console.groupEnd();\n    }\n  }\n\n  protected getUrl(path: string): string {\n    let url: string;\n    if (path.startsWith('http') || path.startsWith('//')) {\n      url = path;\n    } else {\n      url = `${this.environment.apiUrl}/${path}`;\n    }\n\n    return url;\n  }\n\n  /**\n   * If a normalizr schema is given, it returns the normlaized date, the original data otherwise.\n   *\n   * @param  data\n   * @param  [schema]\n   * @returns either normalized or the given data.\n   */\n  protected normalizePayload(data: any, schema?: Schema) {\n    if (schema) {\n      return normalize(data, schema);\n    }\n\n    return data;\n  }\n\n  /**\n   * Extracts the JSON from an Angular [[Response]]\n   *\n   * @param  response\n   * @returns Whatever the HTTP call returned as JSON\n   */\n  protected extractResponseData(response: Response): any {\n    let payload: any;\n\n    try {\n      payload = response.json();\n    } catch (e) {\n      payload = {};\n    }\n\n    return payload;\n  }\n\n  /**\n   * Hook to do some processing of the given options\n   *\n   * Used mainly to add headers (like auth) or other default options to all requests.\n   * Just returns the given options as default\n   *\n   * @param options\n   */\n  protected buildRequestOptions(options: any): any {\n    return options;\n  }\n}\n",
    "import { NgModule, Inject, LOCALE_ID } from '@angular/core';\nimport { TranslateService, TranslateModule } from '@ngx-translate/core';\n\nimport { APP_TRANSLATIONS } from '../tokens';\nimport { TranslateActions } from './translate.actions';\nimport { LocaleService } from './locale.service';\n\n@NgModule({\n  exports: [TranslateModule],\n  imports: [TranslateModule.forRoot()],\n  providers: [\n    TranslateActions,\n    LocaleService,\n    { provide: APP_TRANSLATIONS, useValue: { name: 'en', translations: {} }, multi: true }\n  ]\n})\nexport class AppTranslateModule {\n  constructor(\n    private translate: TranslateService,\n    @Inject(LOCALE_ID) private appLocale: string,\n    @Inject(APP_TRANSLATIONS) private translations: Array<{ name: string; translations: any }>\n  ) {\n    this.setupTranslations();\n  }\n\n  public setupTranslations() {\n    this.translations.forEach((translation: { name: string; translations: any }) => {\n      this.translate.setTranslation(translation.name, translation.translations, true);\n    });\n\n    this.translate.setDefaultLang(this.appLocale);\n    this.translate.use(this.appLocale);\n  }\n}\n",
    "import { Injectable } from '@angular/core';\nimport { TranslateService, LangChangeEvent } from '@ngx-translate/core';\n\nimport { TranslateActions } from './translate.actions';\n\n@Injectable()\nexport class LocaleService {\n  constructor(\n    private translateActions: TranslateActions,\n    private translateService: TranslateService\n  ) {}\n\n  public setup() {\n    this.translateService.onLangChange.subscribe((event: LangChangeEvent) => {\n      this.translateActions.setLocale(event.lang);\n    });\n  }\n}\n",
    "import { Injectable } from '@angular/core';\nimport { dispatch } from '@angular-redux/store';\n\nimport { IAction } from '../interfaces';\n\nexport const TRANSLATE_SET_LOCALE: string = 'TRANSLATE_SET_LOCALE';\n\n@Injectable()\nexport class TranslateActions {\n  @dispatch()\n  public setLocale(locale: string): IAction {\n    return {\n      type: TRANSLATE_SET_LOCALE,\n      payload: locale\n    };\n  }\n}\n",
    "import { InjectionToken } from '@angular/core';\nimport {\n  IEnvironment,\n  IReducerConfig,\n  IErrorFormatterConfig,\n  ITranslationConfig,\n  IAppEpic,\n} from './interfaces';\n\nexport const APP_REDUCERS: InjectionToken<IReducerConfig> = new InjectionToken(\n  'APP_REDUCERS'\n);\nexport const APP_EPICS: InjectionToken<IAppEpic> = new InjectionToken(\n  'APP_EPICS'\n);\n\nexport const APP_ERROR_FORMATTERS: InjectionToken<\n  IErrorFormatterConfig\n> = new InjectionToken('APP_ERROR_FORMATTERS');\n\nexport const APP_TRANSLATIONS: InjectionToken<\n  ITranslationConfig\n> = new InjectionToken('APP_TRANSLATIONS');\n\nexport const APP_ENVIRONMENT: InjectionToken<IEnvironment> = new InjectionToken(\n  'APP_ENVIRONMENT'\n);\n",
    "import { Middleware, GenericStoreEnhancer } from 'redux';\nimport { NgRedux, DevToolsExtension } from '@angular-redux/store';\nimport { NgReduxRouter } from '@angular-redux/router';\nimport { Map, fromJS } from 'immutable';\n\nimport { IState, IEnvironment } from '../interfaces';\nimport { RootReducer } from '../redux/root.reducer';\nimport { RootEpic } from '../redux/root.epic';\nimport { StableService } from '../services/stable.service';\nimport { createReduxStore, routerStateSelector } from '../redux/store';\nimport {\n  observableMiddleware,\n  removeEmptyActionsMiddleware,\n} from '../redux/middleware';\n\n/**\n * Base class for an Angular Root Module.\n *\n * This sets up all the basics like redux store, stable tracking, hmr in dev ...\n *\n * @export\n * @abstract\n */\nexport abstract class MainBaseModule {\n  constructor(\n    private store: NgRedux<IState>,\n    private devTools: DevToolsExtension,\n    private rootReducer: RootReducer,\n    private rootEpic: RootEpic,\n    private ngReduxRouter: NgReduxRouter,\n    private environment: IEnvironment,\n    private stableService: StableService\n  ) {\n    let appState: IState | undefined;\n\n    // @ts-ignore\n    if (module.hot && window.hmrData) {\n      // @ts-ignore\n      appState = window.hmrData.appState;\n      // @ts-ignore\n      delete window.hmrData;\n    }\n\n    this.setupStore(appState);\n    this.ngReduxRouter.initialize(routerStateSelector);\n  }\n\n  protected setupStore(appState: IState = Map({})): void {\n    const store = createReduxStore(\n      <any>this.rootReducer.reducer(),\n      fromJS(appState),\n      this.getMiddleware(),\n      this.getEnhancers()\n    );\n\n    this.store.provideStore(store);\n    this.stableService.init();\n  }\n\n  protected getMiddleware(): Middleware[] {\n    let defaultMiddleware = [\n      removeEmptyActionsMiddleware,\n      observableMiddleware,\n      this.rootEpic.middleware,\n    ];\n\n    if (this.environment.additionalMiddleware) {\n      defaultMiddleware = [\n        ...defaultMiddleware,\n        ...this.environment.additionalMiddleware,\n      ];\n    }\n\n    return defaultMiddleware;\n  }\n\n  protected getEnhancers(): GenericStoreEnhancer[] {\n    let defaultEnhancers: GenericStoreEnhancer[] = [];\n\n    if (this.environment.additionalEnhancers) {\n      defaultEnhancers = [\n        ...defaultEnhancers,\n        ...this.environment.additionalEnhancers,\n      ];\n    }\n\n    if (!this.environment.production && this.devTools.isEnabled()) {\n      defaultEnhancers = [...defaultEnhancers, this.devTools.enhancer()];\n    }\n\n    return defaultEnhancers;\n  }\n}\n",
    "import { HttpErrorResponse } from '@angular/common/http';\nimport { NgRedux } from '@angular-redux/store';\nimport { Middleware } from 'redux';\nimport { createLogger } from 'redux-logger';\nimport { Observable } from 'rxjs/Observable';\nimport 'rxjs/add/operator/takeUntil';\n\nimport { IState, IAction, IReducer } from '../interfaces';\n\nexport type NextEnhancerCallback = (\n  reducer: IReducer,\n  initialState: IState,\n  enhancer: any\n) => NgRedux<IState>;\n\n/**\n *  Middleware to automatically dispatch async actions when getting an Observable as payload\n *\n * It dispatches a _START action at once,\n * a _NEXT action for every next tick with the result data of the next as payload\n * and a _ERROR action, should the Observable generate an exception.\n *\n * If the initial action includes an Observable in action.meta.cancel, this is used to cancel out the\n * _NEXT actions as soon as this one fires once.\n *\n * @param  store\n * @param  action\n */\nexport const observableMiddleware: any = (store: NgRedux<IState>) => (\n  next: (action: IAction) => any\n) => (action: IAction) => {\n  if (action.payload instanceof Observable) {\n    const baseType: string = action.type;\n    let obs: Observable<any> = action.payload;\n\n    if (action.meta && action.meta.cancel) {\n      // if the action has a cancel observable, use it\n      obs = obs.takeUntil(action.meta.cancel);\n    }\n\n    store.dispatch({\n      type: `${baseType}_START`,\n      meta: action.meta,\n    });\n\n    obs.subscribe(\n      (data: any) =>\n        store.dispatch({\n          type: `${baseType}_NEXT`,\n          payload: data,\n          meta: action.meta,\n        }),\n      (error: HttpErrorResponse) =>\n        store.dispatch({\n          type: `${baseType}_ERROR`,\n          payload: error,\n          meta: action.meta,\n        }),\n      () => {\n        if (action.meta && action.meta.dispatchCompleted) {\n          store.dispatch({ type: `${baseType}_COMPLETED` });\n        }\n      }\n    );\n  } else {\n    return next(action);\n  }\n};\n\n/**\n * Wrapper around redux-logger middleware to work with ImmutableJS data structures\n */\nexport const loggerMiddleware: Middleware = createLogger({\n  stateTransformer: (state: IState) => (state.toJS ? state.toJS() : state),\n});\n\n/**\n * Simple middleware to stop actions with an empty type from reaching the rest of the redux logic.\n *\n * @param  store\n */\nexport const removeEmptyActionsMiddleware: any = (_: NgRedux<IState>) => (\n  next: (action: IAction) => any\n) => (action: IAction) => {\n  if (action && action.type) {\n    return next(action);\n  }\n};\n",
    "import {\n  applyMiddleware,\n  compose,\n  createStore,\n  Store,\n  Reducer,\n  Middleware,\n  GenericStoreEnhancer,\n} from 'redux';\nimport { fromJS } from 'immutable';\nimport persistState from 'redux-localstorage';\nimport transit from 'transit-immutable-js';\n\nimport { IState } from '../interfaces';\n\n/**\n * Helper function to setup the redux store with reducers, middleware and enhancers.\n *\n * @export\n * @param  rootReducer\n * @param )]\n * @param  [middleware=[]]\n * @param  [enhancers=[]]\n * @returns\n */\nexport function createReduxStore(\n  rootReducer: Reducer<IState>,\n  initialState: IState = fromJS({}),\n  middleware: Middleware[] = [],\n  enhancers: GenericStoreEnhancer[] = []\n): Store<IState> {\n  return createStore(\n    rootReducer,\n    initialState,\n    compose(applyMiddleware(...middleware), ...enhancers)\n  ) as Store<IState>;\n}\n\n/**\n * Redux [[GenericStoreEnhancer]] that persists all state changes to localStorage,\n * knowing how to handle an ImmutableJS state.\n *\n * @export\n * @returns\n */\nexport function persistStateEnhancer(\n  paths?: string | string[]\n): GenericStoreEnhancer {\n  const converter = transit.withFilter((value: any) => {\n    return !(value instanceof Error);\n  });\n\n  return persistState(paths, {\n    serialize: (state: IState) => converter.toJSON(state),\n    deserialize: (data: string) => converter.fromJSON(data),\n    merge: (initialState: IState, persistedState: IState) =>\n      initialState.merge(persistedState),\n    slicer: (statePaths: undefined | string | string[]) => {\n      return (state: IState) => {\n        if (typeof statePaths === 'string') {\n          return state.filter((_, k) => k === statePaths);\n        } else if (Array.isArray(statePaths)) {\n          return state.filter((_, k) => statePaths.indexOf(k) !== -1);\n        } else {\n          return state;\n        }\n      };\n    },\n  });\n}\n\n/**\n * Selector function to return the current router substate.\n *\n * @export\n * @param  state\n * @returns string\n */\nexport function routerStateSelector(state: IState): string {\n  return state.get('router');\n}\n",
    "import { FormGroup, FormControl } from '@angular/forms';\nimport { Map } from 'immutable';\n\n/**\n * Base class for *dumb* components\n *\n * Data is transfered via Inputs and Outputs, no Store or Actions allowed.\n *\n * @export\n */\nexport class PresentationalComponent {\n  /**\n   * ImmutableJS aware track function\n   *\n   * Mainly used in ngFor trackBy\n   *\n   * @param  index\n   * @param  item\n   * @returns\n   *\n   * @memberOf PresentationalComponent\n   */\n  public identify(_: number, item: Map<string, any>): number {\n    if (typeof item.hashCode !== 'function') {\n      throw new TypeError(\n        `Given item is not of type Immutable, ${item.toString()} given!`\n      );\n    }\n    return item.hashCode();\n  }\n\n  /**\n   * Tests, wether a form component has errors\n   *\n   * @param  form\n   * @param  fieldName\n   * @param  [errorName]\n   * @returns\n   *\n   * @memberOf PresentationalComponent\n   */\n  public hasError(\n    form: FormGroup,\n    fieldName: string,\n    errorName?: string\n  ): boolean {\n    const control: FormControl = <FormControl>form.get(fieldName);\n\n    if (control.untouched) {\n      return false;\n    }\n\n    if (errorName) {\n      return !!(control.errors && control.errors[errorName]);\n    } else {\n      return !!control.errors;\n    }\n  }\n}\n",
    "import { OnDestroy, Injectable } from '@angular/core';\nimport { Subscription } from 'rxjs/Subscription';\nimport { Observable } from 'rxjs/Observable';\nimport 'rxjs/add/operator/first';\n\nimport {\n  INormalizedCollectionState,\n  INormalizedEntityState,\n} from '../redux/normalized/interfaces';\nimport { subStateStale } from '../redux/normalized/utils';\n\n/**\n * Base class for smart/container Components.\n *\n * This is used for Components with store data access.\n *\n * @export\n */\n@Injectable()\nexport class ContainerComponent implements OnDestroy {\n  public subscriptions: Subscription[] = [];\n  [key: string]: any;\n\n  /**\n   * Default OnDestroy callback that unsubscribes from all rxjs Subscriptions of this component.\n   *\n   * @memberof ContainerComponent\n   */\n  public ngOnDestroy() {\n    this.subscriptions.forEach((subscription: Subscription) => {\n      subscription.unsubscribe();\n    });\n\n    this.subscriptions = [];\n  }\n\n  /**\n   * Wrapper around [[Observable.subscribe]] that saves the [[Subscription]] to be removed later.\n   *\n   * @param  obs\n   * @param  callback\n   * @memberof ContainerComponent\n   */\n  public subscribeToObservable<T>(\n    obs: Observable<T>,\n    callback: (data: T) => void\n  ) {\n    this.subscriptions.push(obs.subscribe(callback.bind(this)));\n  }\n\n  /**\n   * Shortcut function to always have the current value from an [[Observable]] available in the [[Component]]\n   *\n   * @param  obs The Observable to get the data from.\n   * @param  propertyName The name of the property where to store the data in.\n   * @memberof ContainerComponent\n   */\n  public valueFromObservable<T>(obs: Observable<T>, propertyName: string) {\n    this.subscribeToObservable(obs, (data: T) => {\n      this[propertyName] = data;\n    });\n  }\n\n  /**\n   * Helper function to execute a callback only, if a [[INormalizedCollectionState]] has stale data.\n   *\n   * Usually used to check if the data in a selector is too old and the dispatch the read data action.\n   *\n   * @param  subState$\n   * @param  maxAge\n   * @param  callback\n   * @memberof ContainerComponent\n   */\n  public executeIfStateStale(\n    subState$: Observable<INormalizedCollectionState | INormalizedEntityState>,\n    maxAge: number,\n    callback: () => void\n  ): void {\n    subState$.first().subscribe(subState => {\n      if (subStateStale(subState, maxAge)) {\n        callback();\n      }\n    });\n  }\n}\n",
    "import {\n  INormalizedCollectionState,\n  INormalizedEntityState,\n  ICrudActionNames,\n} from './interfaces';\n\n/**\n * Generate standardized action names, used mainly for the normalized reducers.\n *\n * For all the CRUD actions all 4 actions (base, start, next, error) are created.\n *\n * @export\n * @param entityName\n * @param [namespace]\n */\nexport function generateCrudActionNames(\n  entityName: string,\n  namespace?: string\n): ICrudActionNames {\n  const BASE_NAME = namespace\n    ? `${namespace.toLocaleUpperCase()}_${entityName.toLocaleUpperCase()}`\n    : entityName.toLocaleUpperCase();\n\n  const START = 'START';\n  const NEXT = 'NEXT';\n  const ERROR = 'ERROR';\n\n  const READ = `${BASE_NAME}_READ`;\n  const READ_ONE = `${BASE_NAME}_READ_ONE`;\n  const CREATE = `${BASE_NAME}_CREATE`;\n  const UPDATE = `${BASE_NAME}_UPDATE`;\n  const DELETE = `${BASE_NAME}_DELETE`;\n\n  return {\n    read: READ,\n    readStart: `${READ}_${START}`,\n    readNext: `${READ}_${NEXT}`,\n    readNextUpdate: `${READ}_${NEXT}_UPDATE`,\n    readError: `${READ}_${ERROR}`,\n\n    readOne: READ_ONE,\n    readOneStart: `${READ_ONE}_${START}`,\n    readOneNext: `${READ_ONE}_${NEXT}`,\n    readOneNextUpdate: `${READ_ONE}_${NEXT}_UPDATE`,\n    readOneError: `${READ_ONE}_${ERROR}`,\n\n    create: CREATE,\n    createStart: `${CREATE}_${START}`,\n    createNext: `${CREATE}_${NEXT}`,\n    createError: `${CREATE}_${ERROR}`,\n\n    update: UPDATE,\n    updateStart: `${UPDATE}_${START}`,\n    updateNext: `${UPDATE}_${NEXT}`,\n    updateError: `${UPDATE}_${ERROR}`,\n\n    delete: DELETE,\n    deleteStart: `${DELETE}_${START}`,\n    deleteNext: `${DELETE}_${NEXT}`,\n    deleteError: `${DELETE}_${ERROR}`,\n\n    setCurrent: `${BASE_NAME}_SET_CURRENT`,\n    reset: `${BASE_NAME}_RESET`,\n    resetError: `${BASE_NAME}_RESET_ERROR`,\n  };\n}\n\n/**\n * Tests if a normalized subState has data that is too old.\n *\n * Given the maxAge, it tests if the data is already loaded and not older than maxAge.\n *\n * @export\n * @param state\n * @param maxAge=0\n */\nexport function subStateStale(\n  state: INormalizedCollectionState | INormalizedEntityState,\n  maxAge: number = 0\n): boolean {\n  const updatedAt = state.get('updatedAt');\n  return updatedAt === 0 || Date.now() - updatedAt - maxAge > 0;\n}\n\n/**\n * Tests if a normalized state has a specific model instace\n *\n * @export\n * @param  collectionSubState the given state\n * @param  entitiesName the name of the collection in entities\n * @param  id the id of the model instance to fetch\n * @param  [maxAge] if the collection is older than maxAge, return that there is no fitting model\n * @returns\n */\nexport function hasModel(\n  collectionSubState: INormalizedCollectionState,\n  entitiesName: string,\n  id: string,\n  maxAge?: number\n): boolean {\n  id = String(id);\n\n  if (maxAge) {\n    const updatedAt: any = collectionSubState.get('updatedAt');\n    const dataCurrent: boolean = Date.now() - updatedAt - maxAge < 0;\n\n    if (!dataCurrent) {\n      return false;\n    }\n  }\n\n  return collectionSubState.hasIn(['entities', entitiesName, id]);\n}\n"
  ],
  "names": [
    "ɵ0"
  ],
  "mappings": "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"
}
